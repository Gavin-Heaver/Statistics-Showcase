#Gavin Heaver
#STA 4163
#Mini Project

from statsmodels.stats.multicomp import MultiComparison
import numpy as np
import scipy.integrate as integrate
from scipy import stats
import scipy.stats
import pandas as pd
import math
from scipy.stats import t
from statistics import mean

#1: Distribution
def Distribution(x, d1, d2):
    #make sure that x is greater than 0
    if x < 0:
        return 0

    pdf = scipy.stats.f.pdf(x, d1, d2)
    return pdf


    
#2: Variance
def Variance(mpgManual, mpgAutomatic, alpha, tail):
    #get the length of the data
    n1 = len(mpgManual)
    n2 = len(mpgAutomatic)

    #get the degrees of freedom
    df1 = n1 - 1
    df2 = n2 - 1

    #Get the standard deviations
    s2_1 = np.var(mpgManual, ddof=1)
    s2_2 = np.var(mpgAutomatic, ddof=1)

    #Create the test statistic
    f_stat = s2_1 / s2_2

    #Do the one or two tailed test
    if tail == 'right':
        p_value = 1 - stats.f.cdf(f_stat, df1, df2)
    elif tail == 'left':
        p_value = stats.f.cdf(f_stat, df1, df2)
    elif tail == 'both':
        p_value = 2 * min(stats.f.cdf(f_stat, df1, df2), 1 - stats.f.cdf(f_stat, df1, df2))

    # Decide whether to reject the null hypothesis
    if p_value < alpha:
        print(f"Reject the null hypothesis at {alpha*100}% significance level.")
        print(f"Thus, the variance of fuel efficiency is statistically significant different for manual and automatic cars at 5% significance level.")
    else:
        print(f"Fail to reject the null hypothesis at {alpha*100}% significance level.")
        print(f"Thus, the variance of fuel efficiency is not statistically significant different for manual and automatic cars at 5% significance level.")
    #Return f-statistic and p-value
    return f_stat, p_value





#3: ANOVA, tukey, 2-factor ANOVA
def ANOVA(n, k, SST, SSE, alpha):
    #Find the degrees of freedom
    df1 = k - 1
    df2 = n - k

    #Create the MST and MSE
    MST = SST/df1
    MSE = SSE/df2

    #Create the test statistic
    f_stat = MST / MSE

    #Get the critical value and p_value
    critical_value = stats.f.ppf(1 - alpha, df1, df2)
    p_value = 1 - stats.f.cdf(f_stat, df1, df2)

    # Decide whether to reject the null hypothesis
    if p_value < alpha:
        print(f"Reject the null hypothesis at {alpha*100}% significance level.")
        print(f"You can do the Tukey test.")
    else:
        print(f"Fail to reject the null hypothesis at {alpha*100}% significance level.")
        
    return f_stat, critical_value, p_value

def Tukey(dataset, alpha):

    mc = MultiComparison(dataset['MPG'], dataset['CYL'])
    tukey = mc.tukeyhsd(alpha)

    print(tukey)

def ANOVA_2_Factor(df1, df2, SST, SSE, alpha):
    #Create the MST and MSE
    MST = SST/df1
    MSE = SSE/df2

    #Create the test statistic
    f_stat = MST / MSE

    critical_value = stats.f.ppf(1 - alpha, df1, df2)
    p_value = 1 - stats.f.cdf(f_stat, df1, df2)

    # Decide whether to reject the null hypothesis
    if p_value < alpha:
        print(f"Reject the null hypothesis at {alpha*100}% significance level.")
    else:
        print(f"Fail to reject the null hypothesis at {alpha*100}% significance level.")
        
    return f_stat, critical_value, p_value



    
#4: Wilcoxon Signed-Rank Test
def Wilcoxon(dataHigh, dataLow, alpha, tail):
    #Get the lengths of the datasets
    n1 = len(dataHigh)
    n2 = len(dataLow)

    #Make sure that the data is the same length
    if n1 != n2:
        print("Error: The 2 data lengths are not the same")
        return 0, 0

    #Get the alternative scipy name given the tail
    if tail == 'both':
        alternative_scipy = 'two-sided'
    elif tail == 'right':
        alternative_scipy = 'greater'
    elif tail == 'left':
        alternative_scipy = 'less'
    else:
        print("Error: an incorrect tail name was input")
        return 0,0

    #Run the wilcoxon test via the stats library
    Z, p_value = stats.wilcoxon(dataHigh, dataLow, alternative=alternative_scipy)

    #State whether the Null Hypothesis is rejected or not
    if p_value < alpha:
        print(f"Reject the null hypothesis at {alpha*100}% significance level.")
        print(f"\nAt a {100*alpha}% significance level, there is sufficient evidence to conclude that blood pressure is high for those who have more saturated fats intake.")
    else:
        print(f"Fail to reject the null hypothesis at {alpha*100}% significance level.")
        print(f"\nAt a {100*alpha}% significance level, there is not sufficient evidence to conclude that blood pressure is high for those who have more saturated fats intake.")

    #return
    return Z, p_value




#5: Regression
def Regression(x, y, alpha):
    #Get the Coefficients
    x_prime_x = np.dot(x.T, x)
    x_prime_x_inv = np.linalg.inv(x_prime_x)
    x_prime_y = np.dot(x.T, y)
    result = np.dot(x_prime_x_inv, x_prime_y)

    #Print the Coefficients
    print(f"Coefficients:", result)
    beta0 = result[0]
    beta1 = result[1]

    #Get the SSxx
    mean_x = np.mean(x[:, 1])
    squared_deviations = (x[:, 1] - mean_x) ** 2
    SS_xx = np.sum(squared_deviations)

    #Get the standard error
    y_hat = np.dot(x, result)
    residuals = y - y_hat
    sse = np.sum(residuals**2)
    s = math.sqrt(sse/(len(x)-2))

    #Print the standard error
    print(f"Estimated standard error:", s)

    
    #Get the upper and lower bound of confidence interval
    lower_bound = beta1 - t.ppf(1 - alpha / 2, df=len(x)-2)*s/math.sqrt(SS_xx)
    upper_bound = beta1 + t.ppf(1 - alpha / 2, df=len(x)-2)*s/math.sqrt(SS_xx)

    #Print the lower and upper bound of confidence interval
    print(f"CI of slope: [{lower_bound} , {upper_bound}]")

    

def Coeffiecients_of_Correlation_and_Determination(x,y):
    #Get the SSxx
    mean_x = np.mean(x[:, 1])
    squared_deviations_x = (x[:, 1] - mean_x) ** 2
    SS_xx = np.sum(squared_deviations_x)

    #Get the SSyy
    mean_y = np.mean(y)
    squared_deviations_y = (y - mean_y) ** 2
    SS_yy = np.sum(squared_deviations_y)

    #Get the SSxy
    squared_deviations_xy = (x[:, 1] - mean_x) * (y - mean_y)
    variance_xy = np.mean(squared_deviations_xy)
    SS_xy = np.sum(squared_deviations_xy)

    #Get r and r_squared
    r = SS_xy/math.sqrt(SS_xx * SS_yy)
    r_squared = r ** 2

    #Print r and r_squared
    print(f"Coefficient of correlation", r)
    print(f"Coefficient of determination", r_squared)

    return r, r_squared




#main function
def main():
    #1
    print(f"Problem 1: PDF production")
    #Set the dfs and x
    df1 = 4
    df2 = 6
    x = 3
    print(f"df1 = {df1}, df2 = {df2}, x = {x}")
    pdf = Distribution(x, df1, df2)
    print(f"The PDF of the F-distribution at x = {x} when df1 = {df1} and df2 = {df2} is {pdf}")


    #2
    #Get the MPG for the manual and automatic cars
    mpgManual = [21, 21, 22.8, 32.4, 30.4, 33.9, 27.3, 26, 30.4, 15.8, 19.7, 15, 21.4]
    mpgAutomatic = [21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 19.2, 17.8, 16.4, 17.3, 15.2, 10.4, 10.4, 14.7, 21.5, 15.5, 15.2, 13.3, 19.2]

    #Print out the problem, hypothesis, result, F-Stat, and P-value
    print(f"\nProblem 2: Variance")
    print(f"Null Hypothesis: σ1^2 = σ2^2")
    print(f"Alternative Hypothesis: σ1^2 ≠ σ2^2")
    f_stat, p_value = Variance(mpgManual, mpgAutomatic, alpha = 0.05, tail = 'both')
    print(f"Two-tailed Test - F Statistic: {f_stat}, P-value: {p_value}\n")


    #3
    #set the alpha, total number of sample, and treatment amount
    alpha = 0.05
    n = 32
    k = 3

    #Find the number of each treatment
    n_4cyl = 11
    n_6cyl = 7
    n_8cyl = 14

    #Find the average mpg of each treatment, as well as normal average
    x_bar = 20.09063
    x4_bar = 26.66364
    x6_bar = 19.74286
    x8_bar = 15.1

    #Find the standard deviation of each treatment
    s4_cyl = 4.509828
    s6_cyl = 1.453567
    s8_cyl = 2.560048

    #Find the SST and SSE
    SST = n_4cyl * (x4_bar - x_bar) ** 2 + n_6cyl * (x6_bar - x_bar) ** 2 + n_8cyl * (x8_bar - x_bar) ** 2
    SSE = (n_4cyl - 1) * s4_cyl ** 2 + (n_6cyl - 1) * s6_cyl ** 2 + (n_8cyl - 1) * s8_cyl ** 2

    #Print out the problem, hypothesis, results, F-Stat, Critical Value, and P-Value
    print(f"Problem 3: ANOVA")
    print(f"Null Hypothesis: All μ are equal")
    print(f"Alternative Hypothesis: At least 2 treatments differ")
    f_stat, critical_value, p_value = ANOVA(n, k, SST, SSE, alpha)
    print(f"Two-tailed Test - F Statistic: {f_stat}, critical value: {critical_value}, P-value: {p_value}\n")
    
    #Get data for Tukey
    data = {
    'MPG': [22.8, 24.4, 22.8, 32.4, 30.4, 33.9, 21.5, 27.3, 26, 30.4, 21.4, 21, 21, 21.4, 18.1, 19.2, 17.8, 19.7, 18.7, 14.3, 16.4, 17.3, 15.2, 10.4, 10.4, 14.7, 15.5, 15.2, 13.3, 19.2, 15.8, 15],
    'CYL': ['4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '4', '6', '6', '6', '6', '6', '6', '6', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8', '8']
    }

    df = pd.DataFrame(data)
    Tukey(df, 0.05)

    #Make spacing
    print("\n")

    #Change variable for the 2-Factor Test
    df1 = 2
    df2 = 1
    SST = 1.1
    print(f"Null Hypothesis: Cylinders and transmission do not interact")
    print(f"Alternative Hypothesis: Cylinders and transmission interact")
    ANOVA_2_Factor(df1, df2, SST, SSE, alpha)

    df1 = 2
    df2 = 2
    SST = 2.5869
    print(f"\nNull Hypothesis: Cylinder_μ = man_μ")
    print(f"Alternative Hypothesis: Cylinder_μ ≠ man_μ")
    ANOVA_2_Factor(df1, df2, SST, SSE, alpha)

    df1 = 2
    df2 = 1
    SST = 2.34
    print(f"\nNull Hypothesis: Auto_μ = man_μ")
    print(f"Alternative Hypothesis: Auto_μ ≠ man_μ")
    ANOVA_2_Factor(df1, df2, SST, SSE, alpha)

    #4
    #Set the data along with alpha and tail position
    print(f"\nProblem 4: Wilcoxon")
    dataHigh = [143, 163, 153, 153, 146, 150, 148, 153, 153, 158, 149, 173, 165, 145, 143, 152,	141, 176, 143, 162, 149, 156, 151, 159,	164, 154, 152, 142, 162, 155, 175, 184,	167, 148, 170, 159, 149, 140, 185, 160,	157, 158, 162, 160, 180, 155, 172, 157,	171, 170, 175, 175, 172, 173, 170, 164, 147, 154, 172, 162, 152, 147, 144, 144,	158, 147, 154, 151, 149, 138, 162, 157, 141, 167, 147, 143, 142, 166, 147, 142,	157, 170, 150, 150, 167, 154, 143, 157,	149, 161, 142, 162, 144, 142, 159, 140,	144, 142, 145, 145, 168, 142, 147, 148,	162, 170, 173, 151, 155, 163, 183, 159,	148, 151, 165, 152, 161, 165, 149, 185]
    dataLow = [153, 170, 168, 142, 141,	147, 133, 141, 131, 125, 164, 159, 135,	159, 153, 126, 162, 134, 136, 150, 168,	155, 136, 132, 160, 160, 136, 183, 152,	162, 151, 139, 175, 184, 151, 171, 157,	159, 140, 174, 167, 158, 168, 159, 153,	164, 169, 148, 185, 163, 146, 160, 175,	163, 185, 146, 176, 147, 161, 164, 149,	142, 146, 138, 131, 145, 134, 135, 131,	135, 133, 135, 168, 144, 147, 151, 149,	147, 149, 135, 127, 150, 138, 147, 157,	146, 148, 136, 146, 132, 145, 132, 157,	140, 137, 154, 169, 145, 137, 143, 178,	141, 149, 148, 138, 143, 167, 158, 152, 154, 161, 143, 159, 177, 142, 152, 152, 174, 151, 163]
    alpha = 0.05
    tail = 'right'

    z, p_value = Wilcoxon(dataHigh, dataLow, alpha, tail)
    print(f"\nWilcoxon Test - Z Statistic: {z}, P-value: {p_value}")

    #5
    print(f"\nProblem 5: Regression")
    #Set all of the arrays
    Hydrophobicity = np.array([0.339285714, -0.146774194, -0.40617284,	-0.59137931,	0.141176471,	-0.059036145,	-0.164583333,	-0.630120482,	0.319753086,	-0.192941176,	0.078823529,	0.114285714,	0.905681818,	0.085714286,	0.257142857,	-0.379310345,	-0.681521739,	-0.84516129,	-0.164583333,	-0.243137255,	-0.248571429,	-0.124633431,	-0.389333333,	-0.629166667,	-0.127634488,	-0.100442478,	0.076666667,	-0.547222222,	-0.053339882,	-0.10234375,	0.059259259,	-0.463736264,	-0.076923077,	-0.21097561,	0.412621359,	0.020833333,	-0.349295775,	0.424324324,	-0.751,	-0.296116505,	-0.321698113,	-0.003174603,	-0.124096386,	0.228,	0.144067797,	-0.325,	-1.24137931,	-0.3875,	-1.241212121,	-0.537931034,	-1.228947368,	-0.104,	0.179591837,	-0.800775194,	0.056390977,	-0.260645161,	-0.485245902,	-0.636842105,	-0.11920904,	-0.473695198,	-0.109638554,	-0.318243243,	-0.318243243,	-0.318110236,	0.12745098,	-0.161264425,	-0.26728972,	-0.295970696,	-0.346043165,	-0.123446328,	-0.110084034,	-0.473430962,	-0.300548446,	-0.17856405,	-0.076190476,	-0.1328125,	-0.198412698,	-0.005673759,	0.584615385,	-0.483298539,	-0.135042735,	-0.425373134,	-0.452141058,	-1.067741935,	-0.289090909,	-0.290857947,	-0.846808511,	0.017241379,	-0.662337662,	-0.225170068,	-0.02283105,	-0.341176471,	-0.875,	-0.247413793,	-0.362295082,	-0.143835616,	-0.151558074,	-0.162601626,	-0.291420534,	-0.210752688,	-0.503333333,	-0.497297297,	-0.747368421,	-0.344670051,	-0.455757576,	-0.712371134,	-0.52173913,	-0.287378641,	0.131496063,	-0.391588785,	-0.308539945,	-0.489803922,	0.099324324,	-0.215789474,	-0.518723404,	-0.523978202,	-0.133613445,	-0.334883721,	-0.168932039,	-0.277545692,	-0.423373494,	0.145614035,	-0.705633803,	-0.475399361,	-0.416587678,	-0.300847458,	-0.315966387,	-0.426244344,	-0.500255754,	-0.404535147,	-0.441458733,	-0.405336427,	-0.275718016,	-0.467638484,	-0.246306306,	-0.228191489,	-0.405140187,	-0.415402844,	0.024,	-0.223444976,	-0.400945626,	-0.292165899,	-0.279877112,	-0.291538462,	-0.288325653,	-0.283563748,	-0.489002933,	-0.2906298,	-0.274654378,	0.117088608,	-0.286983155,	-0.285407066,	0.209859155,	-0.186725664,	-1.118181818,	-0.099315068,	-0.624242424,	-0.636458333,	-0.65,	-0.31509434,	-0.732330827,	0.155882353,	-0.672222222,	-0.65212766,	-0.963218391,	-0.806153846,	-0.661616162,	-0.245360825,	-0.477419355,	0.300840336,	0.064166667,	-0.568,	0.157575758,	-0.219767442,	-0.74537037,	-0.833333333,	-0.08172043,	-0.650819672,	-0.638235294,	0.230392157,	-0.141747573,	0.291735537,	-0.241666667,	-0.565806452,	-0.608917197,	-0.648550725,	-0.368224299,	-0.751190476,	-0.178431373,	-0.097297297,	-0.186029412,	-0.625084746,	-0.001052632,	-0.072162162,	-0.179032258,	-0.246938776,	-0.333009709,	-0.675,	-0.2,	-0.289085239,	-0.456923077,	-0.55952381,	-0.465671642,	-0.630909091,	-0.466666667,	-0.028205128,	-0.737755102,	-0.258823529,	-0.137777778,	-0.539795918,	-0.613084112,	-0.370454545,	-0.544,	-0.289554531,	-0.448578199,	-0.535416667,	-0.076612903,	-0.133108108,	-0.492372881,	-0.354054054,	-0.350274725,	-0.344383562,	-0.430508475,	-0.387850467,	-0.374485597,	-0.203589744,	-0.391152263,	-0.437946429,	-0.33225058,	0.331818182,	-0.092265193,	-0.296006144,	-0.483098592,	-0.445454545,	-0.017321429,	-0.729292929,	-0.184090909,	-0.585227273,	-0.115757576,	-0.1125,	-0.260835509,	-0.287711214,	-0.299231951,	-0.389495798,	-0.363235294,	0.274,	-0.28156682,	-0.56122449,	-0.560606061,	-0.286789555,	-0.36682243,	-0.634545455,	-0.42710084,	-0.285099846,	-0.342691415,	-0.294930876,	-0.307373272,	-0.050340136,	-0.292473118,	-0.281105991,	-0.356612529,	-0.28141321,	-0.595522388,	-0.552212389,	-0.389411765,	-0.552358491,	-0.651086957,	0.1,	0.094642857,	-0.546470588,	-0.578235294,	-0.296313364,	-0.282795699,	-0.280030722,	-0.284331797,	-0.285867896,	-0.438755981,	-0.355452436,	-0.4771261,	-0.351276102,	-0.379582367,	-0.346867749,	-0.372839506,	-0.295852535,	-0.243697479,	-0.187027027,	-0.215228426,	-0.517253521,	-0.382598608,	0.013846154,	-0.36,	-0.281105991,	-0.68018018,	-0.182552083,	-0.291787942,	-0.440131579,	-0.322429907,	-0.666304348,	-0.526107226,	-0.239453125,	0.063013699,	-0.010465116,	-0.372727273,	-0.26259542,	-0.35,	-0.244303797,	-0.758333333,	0.36,	-0.17124774,	-0.493841642,	-0.218998716,	-0.110327811,	-0.219168174,	-0.582758621,	-0.279895561,	-0.377102804,	-0.342957746,	-0.373831776,	-0.417073171,	-0.095731707,	-0.058585859,	-0.322654867,	-0.393995381,	-0.490762463,	-0.392952381,	0.072727273,	-0.406285714,	-0.415873016,	0.377586207,	-0.416587678,	-0.6,	-0.351972158,	-0.110815603,	-0.560307692,	-0.233511586,	-0.288357588,	-0.204494382,	-0.512857143,	-0.365186916,	-0.288511749,	-0.092307692,	-0.484164223,	-0.366985646,	-0.419859813,	-0.350812065,	-0.276240209,	-0.095390071,	-0.424065421,	-0.074825175,	-0.497307692,	-0.088111888,	-0.525291829,	-0.285900783,	-0.399065421,	-0.181417625,	-0.297127937,	-0.380974478,	-0.308119658,	-0.109763835,	-0.477142857,	-0.357772622,	-0.277717391,	-0.37337963,	-0.264751958,	-0.381902552,	-0.491304348,	-0.401636364,	-0.352668213,	-0.495014663,	-0.382962963,	-0.365197216,	-0.373831776,	-0.122323944,	-0.401869159,	-0.192,	-0.455819477,	-0.385227273,	-0.324070796,	-0.095035461,	-0.086868687,	-0.38411215,	-0.472121212,	-0.368691589,	-0.384345794,	-0.641358025,	-0.9,	-0.82345679,	-0.497093023,	-0.617930029,	-0.356612529,	-0.058792185,	-0.381775701,	-0.389327146,	0.027,	-0.219377163,	-0.132167832,	-0.228660436,	-0.228070175,	-0.228070175,	-0.751898734,	-0.604496788,	-0.330416667,	-0.427488152,	-0.306842105,	-0.261316872,	-0.088520408,	-0.181547619,	-0.23452381,	-0.409090909,	-0.685294118,	-0.640277778,	-0.201136364,	-0.491397849,	-0.314141414,	-0.384578313,	-0.332323232,	-0.285900783,	-0.356410256,	-0.217582418,	-0.265384615,	-0.380841121,	-0.36682243,	-0.382,	-0.357772622,	0.136190476,	0.303389831,	-0.362626263,	-0.307311828,	-0.399766355,	-0.465048544,	0.083695652,	-0.523648649,	-0.35,	-0.452903226,	-0.38411215,	-0.192592593,	-0.351044084,	-0.565048544,	-0.22220339,	-0.364965197,	-0.195927602,	-0.212871287,	-0.205263158,	-0.657057057,	-0.654609929,	-0.179562044,	-0.179562044,	-0.681381381,	-0.363909774,	-0.361716937,	-0.079281768,	-0.32244898,	-0.546785714,	-0.402564103,	-0.277570093,	-0.328710462,	-0.062,	-0.134653465,	-0.251381215,	-0.517150396,	-0.408521739,	-0.324615385,	-0.452963671,	-0.367523364,	-0.347099768,	-0.481818182,	-0.66344086,	-0.82481203,	0.001694915,	-0.374766355,	-0.395093458,	-0.638461538,	-0.2,	-0.39135514,	-0.362850467,	-0.240481928,	-0.455737705,	-0.29375,	-0.381670534,	-0.372157773,	-0.398831776,	-0.755483871,	-0.423636364,	-0.363076923,	-0.555675676,	-0.292664093,	-0.406032483,	-0.253977273,	-0.381542056,	-0.253977273,	-0.276237624,	-0.390186916,	-0.446280992,	-0.482404692,	-0.455263158,	-0.636082474,	0.029292929,	-0.409701493,	0.116,	0.095512821,	-0.414512472,	-0.511440678,	-0.400649351,	-0.410657596,	-0.557641921,	-0.40490566,	-0.039423077,	-0.373394495,	-0.251,	-0.47239819,	-0.496627566,	-0.5,	-0.489756944,	-0.622356495,	-0.364556962,	-0.352531646,	-0.452531646,	-0.420634921,	-0.646494465,	-0.704059041,	-0.440277778,	-0.431292517,	-0.440277778,	-0.32662037,	-0.215532734,	0.320883534,	-0.342857143,	-0.55721393,	-0.309032258,	-0.462222222,	-0.1515625,	-0.313333333,	-0.830769231,	-0.538076923,	-0.188959538,	-0.586065574,	-0.392056075,	-0.193569322,	-0.236319018,	-0.234398977,	-0.398412698,	-0.525,	-0.282773109,	-0.253757962,	-0.229411765,	-0.180348259,	-0.403448276,	-0.302255639,	-0.178787879,	-0.179084967,	-0.446575342,	0.160126582,	-0.284073107,	-0.35546875,	-0.190496894,	-0.229243354,	-0.377262181,	-0.360280374,	-0.372429907,	-0.180211574,	-0.363785047,	-0.692045455,	-0.456240822,	-0.698867925,	-0.074178404,	-0.578893443,	-0.634745763,	-0.452753108,	-0.715609756,	-0.301935484,	-0.277027027,	-0.366589327,	-0.75,	-0.543137255,	-0.191622419,	-0.243526786,	-0.095266272,	-0.543386243,	-0.255916775,	-0.101198692,	-0.192487194,	-0.160144553,	-0.230583942,	-0.367056075,	-0.578893443,	-0.595893224,	-0.261879896,	-0.375700935,	-0.652517986,	-0.502941176,	-0.24168798,	-0.370327103,	-0.111138527,	-0.115333098,	-0.52218543,	-0.114451886,	-0.222336329,	-0.3612529,	-0.363785047,	-0.608992806,	-0.68583691,	-0.524719101,	-0.189689441,	-0.20433974,	-0.138065448,	-0.289667897,	-0.065795053,	-0.489147287,	-0.651190476,	-0.289622642,	-0.591489362,	-0.493009119,	0.04,	0.143478261,	-0.291827957,	-0.386521739,	0.14,	-0.111773,	-0.036538462,	-0.385280374,	-0.113923158,	-0.39389313,	-0.379389313,	-0.479124088,	0.116216216,	-0.584016393,	0.208695652,	-0.122979684,	-0.25752551,	-0.241304348,	-0.581780538,	-0.354545455,	-0.143055556,	-0.455670103,	-0.187762448,	-0.122565969,	-0.195403727,	-0.300860215,	-0.31483871,	-0.340909091,	-0.256164384,	-0.53490566,	-0.542567568,	0.005978261,	-0.271296296,	-0.374065421,	-0.051190476,	-0.067816092,	-0.227969349,	-0.224680307,	-0.208344031,	-0.257707006,	-0.227749361,	-0.192771084,	-0.579918033,	-0.403271028,	-0.238363171,	0.011702128,	-0.328784119,	0.7,	-0.358468677,	-0.40864486,	-0.275979112,	-0.543448276,	-0.505202312,	-0.29178744,	-0.207065217,	-0.374468085,	-0.208589744,	-0.590163934,	-0.295561358,	-0.488285714,	-0.460968661,	-0.428738318,	-0.568670886,	-0.626265823,	-0.399071926,	-0.616935484,	-0.577016129,	-0.558208955,	-0.366121495,	-0.282488479,	-0.353846154,	-0.7,	-0.209502262,	-0.495566502,	-0.500534759,	-0.583983573,	-0.199603175,	-0.310537634,	-0.387470998,	-0.325352113,	-0.36056338,	-0.213266444,	-0.5948,	-0.538684211,	-0.46442953,	-0.435502959,	-0.459763314,	-0.2585,	-0.317096774,	-0.321830986,	-0.575984252,	-0.575609756,	-0.585245902,	-0.404672897,	-0.347795824,	-0.116249559,	-0.395093458,	-0.585245902,	-1.012037037,	-1.015740741,	-0.295024876,	-0.209621993,	-0.44972067,	-0.441818182,	-0.369172932,	-0.394199536,	-0.347099768,	0.185897436,	0.167088608,	-0.325236593,	0.053947368,	0.14875,	-0.415192744,	0.445333333,	-0.241237113,	-0.469648094,	-0.366588785,	-0.370765661,	-0.396055684,	-0.417056075,	-0.59650924,	-0.456477438,	-0.465705128,	-0.152173913,	-0.570557029,	-0.432579186,	-0.521285141,	-0.183154122,	-0.224014337,	-0.305925926,	0.169677419,	-0.600145773,	-0.480701754,	-0.35864486,	-0.7296875,	-0.892307692,	0.252447552,	0.083636364,	-0.317714286,	-0.495466667,	-0.28381201,	0.178417266,	-0.599342105,	0.273381295,	-0.47318612,	-0.20887574,	-0.113902611,	-0.118348624,	-0.118313338,	-0.373303167,	-0.380090498,	-0.203804348,	-0.374299065,	-0.482991202,	-0.119230769,	-0.277284595,	-0.179044118,	-0.396682464,	-0.233333333,	-0.384918794,	-0.177304965,	-0.415646259,	-0.485065886,	-0.384156379,	0.141666667,	-0.701315789,	-0.159109312,	-0.414617169,	-0.368445476,	-0.275211268,	-0.405568445,	-0.342923434,	-0.408695652,	-0.227419355,	-0.355452436,	-0.265796345,	-0.479912023,	-0.411633663,	0.094029851,	-0.312048193,	-0.822613065,	-0.627946128,	-0.449342105,	0.013235294,	-0.72243346,	-0.364,	-0.316438356,	-0.416483516,	-0.471304348,	-0.494767442,	-0.279322034,	-0.725704225,	-0.741326531,	-0.501626016,	-0.507723577,	-0.226086957,	-0.495019157,	-0.299222798,	-0.671238938,	-0.39765625,	-0.128571429,	-0.66097561,	-0.352713178,	-0.425287356,	-0.333888889,	-0.495601173,	-0.15412844,	-0.10942029,	-0.173913043,	-0.437037037,	-0.635977337,	-0.486378738,	0.086343612,	-0.216935484,	-0.73699422,	-0.588095238,	-0.276666667,	0.031034483,	-0.1,	-0.398148148,	-0.319148936,	-0.68245614,	-0.486632391,	-0.345652174,	-0.117391304,	-0.421818182,	-0.275979112,	-0.380373832,	-0.398130841,	-0.519205298,	-0.464102564,	-0.622772277,	-0.408878505,	-0.35154185,	-0.355916473,	-0.362149533,	-0.348,	-0.409512761,	-0.395594714,	-0.378481013,	-0.388084112,	-0.585928144,	-0.488922156,	-0.454787234,	-0.389361702,	-0.166666667,	-0.524,	-0.471428571,	-0.431555556,	-0.392857143,	-0.15,	0.09205298,	0.078395062,	0.069886364,	-0.52815534,	0.100621118,	-0.359164733,	-0.471994135,	-0.728387097,	-0.352752294,	-0.402142857,	-0.480921053,	-0.2824,	-0.496334311,	-0.333333333,	-0.636567164,	-0.411428571,	-0.313888889,	-0.530120482,	-0.538819876,	-0.601863354,	-0.504481793,	-0.627304965,	-0.536578947,	-0.538961039,	-0.449350649,	-0.551490515,	-1.127380952,	-0.451694915,	-0.937313433,	-0.958208955,	-0.485365854,	-0.614521452,	-0.418300654,	-0.364719626,	-0.370588235,	-0.154285714,	-0.367990654,	-0.459714286,	-0.488856305,	-0.418,	-0.315333333,	-0.489814815,	-0.491666667,	-0.746969697,	-1.008,	-0.360280374,	-0.361716937,	-0.06001403,	-0.627666667,	-0.603773585,	-0.635925926,	-0.603630363,	-0.475714286,	-0.545428571,	-0.598679868,	-0.490948276,	-0.445508982,	-0.004854369,	-0.392763158,	-0.40521327,	-0.388837209,	-0.083838384,	-0.482035928,	-0.524064171,	-0.579710145,	-0.669433962,	-0.5521875,	-0.141836735,	-0.673451327,	-0.634741784,	-0.557348703,	-0.594236311,	-0.587172012,	-0.633333333,	-0.510050251,	-0.673451327,	-0.545098039,	-0.628318584,	-0.634741784,	-0.633333333,	-0.592774566,	-0.555780347,	-0.628318584,	-0.463905325,	-0.421637427,	-0.429220779,	-0.436144578,	-0.451592357,	-0.331177829,	-0.5,	0.040442338,	-0.297127937,	-0.285253456,	-0.685,	-0.052205882,	-0.644239631,	-0.548847926,	-0.617768595,	-0.671900826,	-0.44,	-0.587058824,	-0.634251969,	-0.043333333,	-0.025409836,	-0.701941748,	-0.111843497,	-0.250617284,	-0.458823529,	-0.724858757,	-0.69039548,	-0.376635514,	-0.440277778,	-0.520108696,	-0.516666667,	-0.639393939,	-0.368817204,	-0.592424242,	-0.56375,	-0.564516129,	-0.479289941,	-0.701086957,	-0.511267606,	-0.472413793,	-0.386805556,	-0.420138889,	-0.418343195,	-0.49875,	-0.577142857,	-0.513888889,	-0.618604651,	-0.378886311,	-0.245189504,	-0.36287703,	-0.29047619,	-0.230769231,	-0.453888889,	-0.402160494])
    Protein_length = np.array([[1, 56],	[1, 62],[1, 81],	[1, 58],	[1, 34],	[1, 83],	[1, 48],	[1, 83],	[1, 81],	[1, 85],	[1, 85],	[1, 49],	[1, 88],	[1, 28],	[1, 91],	[1, 87],	[1, 92],	[1, 93],	[1, 96],	[1, 102],	[1, 35],	[1, 341],	[1, 150],	[1, 48],	[1, 1357],	[1, 226],	[1, 60],	[1, 108],	[1, 1018],	[1, 256],	[1, 54],	[1, 91],	[1, 143],	[1, 82],	[1, 103],	[1, 120],	[1, 71],	[1, 37],	[1, 200],	[1, 206],	[1, 212],	[1, 63],	[1, 83],	[1, 75],	[1, 177],	[1, 88],	[1, 29],	[1, 64],	[1, 165],	[1, 261],	[1, 152],	[1, 125],	[1, 98],	[1, 129],	[1, 133],	[1, 155],	[1, 61],	[1, 57],	[1, 354],	[1, 479],	[1, 166],	[1, 148],	[1, 148],	[1, 127],	[1, 357],	[1, 1993],	[1, 428],	[1, 546],	[1, 139],	[1, 354],	[1, 119],	[1, 478],	[1, 547],	[1, 1936],	[1, 315],	[1, 64],	[1, 126],	[1, 141],	[1, 52],	[1, 479],	[1, 117],	[1, 134],	[1, 397],	[1, 31],	[1, 605],	[1, 711],	[1, 141],	[1, 58],	[1, 77],	[1, 147],	[1, 219],	[1, 51],	[1, 76],	[1, 116],	[1, 61],	[1, 146],	[1, 1412],	[1, 1845],	[1, 711],	[1, 93],	[1, 120],	[1, 74],	[1, 38],	[1, 197],	[1, 165],	[1, 291],	[1, 69],	[1, 309],	[1, 254],	[1, 428],	[1, 363],	[1, 510],	[1, 148],	[1, 133],	[1, 470],	[1, 367],	[1, 119],	[1, 86],	[1, 103],	[1, 383],	[1, 415],	[1, 57],	[1, 71],	[1, 313],	[1, 422],	[1, 236],	[1, 238],	[1, 221],	[1, 391],	[1, 441],	[1, 521],	[1, 431],	[1, 383],	[1, 686],	[1, 555],	[1, 188],	[1, 428],	[1, 422],	[1, 150],	[1, 1045],	[1, 423],	[1, 651],	[1, 651],	[1, 650],	[1, 651],	[1, 651],	[1, 682],	[1, 651],	[1, 651],	[1, 158],	[1, 653],	[1, 651],	[1, 142],	[1, 113],	[1, 88],	[1, 146],	[1, 99],	[1, 96],	[1, 96],	[1, 53],	[1, 133],	[1, 68],	[1, 54],	[1, 94],	[1, 87],	[1, 65],	[1, 99],	[1, 97],	[1, 682],	[1, 119],	[1, 120],	[1, 125],	[1, 132],	[1, 344],	[1, 108],	[1, 93],	[1, 93],	[1, 61],	[1, 102],	[1, 102],	[1, 103],	[1, 121],	[1, 60],	[1, 155],	[1, 157],	[1, 138],	[1, 428],	[1, 84],	[1, 102],	[1, 74],	[1, 136],	[1, 295],	[1, 95],	[1, 370],	[1, 62],	[1, 98],	[1, 103],	[1, 48],	[1, 185],	[1, 962],	[1, 65],	[1, 126],	[1, 134],	[1, 165],	[1, 102],	[1, 117],	[1, 98],	[1, 102],	[1, 90],	[1, 98],	[1, 107],	[1, 44],	[1, 100],	[1, 651],	[1, 422],	[1, 48],	[1, 124],	[1, 148],	[1, 118],	[1, 296],	[1, 364],	[1, 365],	[1, 118],	[1, 428],	[1, 486],	[1, 195],	[1, 486],	[1, 224],	[1, 431],	[1, 22],	[1, 362],	[1, 651],	[1, 71],	[1, 99],	[1, 560],	[1, 99],	[1, 88],	[1, 88],	[1, 165],	[1, 80],	[1, 383],	[1, 651],	[1, 651],	[1, 476],	[1, 136],	[1, 50],	[1, 651],	[1, 98],	[1, 198],	[1, 651],	[1, 428],	[1, 110],	[1, 476],	[1, 651],	[1, 431],	[1, 651],	[1, 651],	[1, 147],	[1, 651],	[1, 651],	[1, 431],	[1, 651],	[1, 67],	[1, 113],	[1, 85],	[1, 212],	[1, 92],	[1, 175],	[1, 168],	[1, 170],	[1, 170],	[1, 651],	[1, 651],	[1, 651],	[1, 651],	[1, 651],	[1, 209],	[1, 431],	[1, 682],	[1, 431],	[1, 431],	[1, 431],	[1, 486],	[1, 651],	[1, 119],	[1, 185],	[1, 197],	[1, 284],	[1, 431],	[1, 130],	[1, 145],	[1, 651],	[1, 333],	[1, 384],	[1, 962],	[1, 152],	[1, 107],	[1, 276],	[1, 429],	[1, 256],	[1, 73],	[1, 86],	[1, 55],	[1, 131],	[1, 146],	[1, 79],	[1, 96],	[1, 65],	[1, 553],	[1, 682],	[1, 779],	[1, 2837],	[1, 553],	[1, 116],	[1, 383],	[1, 428],	[1, 142],	[1, 428],	[1, 82],	[1, 328],	[1, 198],	[1, 565],	[1, 433],	[1, 682],	[1, 525],	[1, 88],	[1, 525],	[1, 441],	[1, 116],	[1, 422],	[1, 142],	[1, 431],	[1, 564],	[1, 325],	[1, 561],	[1, 962],	[1, 89],	[1, 70],	[1, 428],	[1, 383],	[1, 143],	[1, 682],	[1, 209],	[1, 428],	[1, 431],	[1, 383],	[1, 564],	[1, 428],	[1, 143],	[1, 260],	[1, 143],	[1, 257],	[1, 383],	[1, 428],	[1, 522],	[1, 383],	[1, 431],	[1, 234],	[1, 2837],	[1, 70],	[1, 431],	[1, 368],	[1, 432],	[1, 383],	[1, 431],	[1, 138],	[1, 550],	[1, 431],	[1, 682],	[1, 135],	[1, 431],	[1, 428],	[1, 2840],	[1, 428],	[1, 50],	[1, 421],	[1, 88],	[1, 565],	[1, 564],	[1, 198],	[1, 428],	[1, 660],	[1, 428],	[1, 428],	[1, 162],	[1, 81],	[1, 81],	[1, 688],	[1, 686],	[1, 431],	[1, 563],	[1, 428],	[1, 431],	[1, 100],	[1, 289],	[1, 143],	[1, 321],	[1, 285],	[1, 285],	[1, 79],	[1, 467],	[1, 480],	[1, 422],	[1, 380],	[1, 243],	[1, 392],	[1, 168],	[1, 168],	[1, 165],	[1, 34],	[1, 72],	[1, 88],	[1, 93],	[1, 198],	[1, 415],	[1, 297],	[1, 383],	[1, 195],	[1, 182],	[1, 182],	[1, 428],	[1, 428],	[1, 150],	[1, 431],	[1, 210],	[1, 118],	[1, 99],	[1, 465],	[1, 428],	[1, 103],	[1, 92],	[1, 148],	[1, 428],	[1, 155],	[1, 428],	[1, 243],	[1, 431],	[1, 103],	[1, 1180],	[1, 431],	[1, 221],	[1, 303],	[1, 1520],	[1, 333],	[1, 282],	[1, 137],	[1, 137],	[1, 333],	[1, 133],	[1, 431],	[1, 362],	[1, 49],	[1, 280],	[1, 78],	[1, 107],	[1, 411],	[1, 50],	[1, 101],	[1, 181],	[1, 379],	[1, 575],	[1, 130],	[1, 523],	[1, 428],	[1, 431],	[1, 682],	[1, 93],	[1, 133],	[1, 59],	[1, 428],	[1, 428],	[1, 260],	[1, 779],	[1, 428],	[1, 428],	[1, 415],	[1, 244],	[1, 272],	[1, 431],	[1, 431],	[1, 428],	[1, 155],	[1, 165],	[1, 260],	[1, 370],	[1, 259],	[1, 431],	[1, 176],	[1, 428],	[1, 176],	[1, 303],	[1, 428],	[1, 121],	[1, 682],	[1, 684],	[1, 291],	[1, 99],	[1, 134],	[1, 150],	[1, 156],	[1, 441],	[1, 236],	[1, 154],	[1, 441],	[1, 229],	[1, 265],	[1, 104],	[1, 218],	[1, 100],	[1, 442],	[1, 682],	[1, 117],	[1, 576],	[1, 331],	[1, 158],	[1, 158],	[1, 158],	[1, 441],	[1, 271],	[1, 271],	[1, 144],	[1, 147],	[1, 144],	[1, 432],	[1, 779],	[1, 249],	[1, 266],	[1, 201],	[1, 465],	[1, 135],	[1, 192],	[1, 150],	[1, 26],	[1, 260],	[1, 1730],	[1, 488],	[1, 428],	[1, 1695],	[1, 815],	[1, 782],	[1, 441],	[1, 248],	[1, 238],	[1, 785],	[1, 782],	[1, 1608],	[1, 174],	[1, 133],	[1, 264],	[1, 153],	[1, 73],	[1, 158],	[1, 383],	[1, 128],	[1, 1610],	[1, 489],	[1, 431],	[1, 428],	[1, 428],	[1, 1607],	[1, 428],	[1, 88],	[1, 681],	[1, 265],	[1, 213],	[1, 488],	[1, 236],	[1, 563],	[1, 205],	[1, 310],	[1, 148],	[1, 431],	[1, 108],	[1, 102],	[1, 1695],	[1, 1344],	[1, 2704],	[1, 378],	[1, 769],	[1, 2753],	[1, 1757],	[1, 1937],	[1, 1370],	[1, 428],	[1, 488],	[1, 487],	[1, 383],	[1, 428],	[1, 278],	[1, 68],	[1, 782],	[1, 428],	[1, 2837],	[1, 2837],	[1, 302],	[1, 2837],	[1, 779],	[1, 431],	[1, 428],	[1, 278],	[1, 233],	[1, 178],	[1, 1610],	[1, 1613],	[1, 2078],	[1, 271],	[1, 2830],	[1, 129],	[1, 84],	[1, 212],	[1, 329],	[1, 329],	[1, 70],	[1, 92],	[1, 465],	[1, 460],	[1, 75],	[1, 2837],	[1, 364],	[1, 428],	[1, 2837],	[1, 131],	[1, 131],	[1, 685],	[1, 222],	[1, 488],	[1, 23],	[1, 2215],	[1, 784],	[1, 782],	[1, 483],	[1, 209],	[1, 432],	[1, 97],	[1, 1667],	[1, 2198],	[1, 1610],	[1, 465],	[1, 465],	[1, 88],	[1, 73],	[1, 106],	[1, 296],	[1, 184],	[1, 216],	[1, 428],	[1, 84],	[1, 87],	[1, 783],	[1, 782],	[1, 779],	[1, 785],	[1, 782],	[1, 1577],	[1, 488],	[1, 428],	[1, 782],	[1, 94],	[1, 403],	[1, 77],	[1, 431],	[1, 428],	[1, 383],	[1, 145],	[1, 173],	[1, 207],	[1, 184],	[1, 141],	[1, 780],	[1, 488],	[1, 383],	[1, 350],	[1, 351],	[1, 428],	[1, 316],	[1, 316],	[1, 431],	[1, 248],	[1, 248],	[1, 201],	[1, 428],	[1, 651],	[1, 130],	[1, 140],	[1, 221],	[1, 203],	[1, 187],	[1, 487],	[1, 252],	[1, 465],	[1, 431],	[1, 142],	[1, 142],	[1, 897],	[1, 250],	[1, 380],	[1, 149],	[1, 169],	[1, 169],	[1, 200],	[1, 310],	[1, 142],	[1, 254],	[1, 41],	[1, 488],	[1, 428],	[1, 431],	[1, 2837],	[1, 428],	[1, 488],	[1, 108],	[1, 108],	[1, 402],	[1, 291],	[1, 358],	[1, 165],	[1, 133],	[1, 431],	[1, 431],	[1, 78],	[1, 79],	[1, 317],	[1, 76],	[1, 80],	[1, 441],	[1, 75],	[1, 97],	[1, 682],	[1, 428],	[1, 431],	[1, 431],	[1, 428],	[1, 487],	[1, 687],	[1, 312],	[1, 207],	[1, 377],	[1, 442],	[1, 498],	[1, 279],	[1, 279],	[1, 270],	[1, 155],	[1, 686],	[1, 684],	[1, 428],	[1, 64],	[1, 65],	[1, 143],	[1, 165],	[1, 175],	[1, 375],	[1, 383],	[1, 139],	[1, 152],	[1, 139],	[1, 317],	[1, 169],	[1, 2834],	[1, 2834],	[1, 2834],	[1, 221],	[1, 221],	[1, 184],	[1, 428],	[1, 682],	[1, 2834],	[1, 383],	[1, 272],	[1, 422],	[1, 186],	[1, 431],	[1, 141],	[1, 441],	[1, 683],	[1, 486],	[1, 24],	[1, 304],	[1, 247],	[1, 431],	[1, 431],	[1, 355],	[1, 431],	[1, 431],	[1, 253],	[1, 186],	[1, 431],	[1, 383],	[1, 682],	[1, 404],	[1, 67],	[1, 249],	[1, 199],	[1, 297],	[1, 152],	[1, 68],	[1, 263],	[1, 300],	[1, 73],	[1, 91],	[1, 345],	[1, 344],	[1, 295],	[1, 284],	[1, 196],	[1, 246],	[1, 246],	[1, 184],	[1, 261],	[1, 386],	[1, 226],	[1, 128],	[1, 105],	[1, 82],	[1, 129],	[1, 174],	[1, 180],	[1, 682],	[1, 109],	[1, 138],	[1, 138],	[1, 81],	[1, 353],	[1, 301],	[1, 227],	[1, 248],	[1, 173],	[1, 210],	[1, 300],	[1, 87],	[1, 193],	[1, 216],	[1, 329],	[1, 228],	[1, 389],	[1, 230],	[1, 253],	[1, 165],	[1, 383],	[1, 428],	[1, 428],	[1, 302],	[1, 312],	[1, 101],	[1, 428],	[1, 227],	[1, 431],	[1, 428],	[1, 50],	[1, 431],	[1, 227],	[1, 237],	[1, 428],	[1, 334],	[1, 334],	[1, 188],	[1, 47],	[1, 48],	[1, 225],	[1, 217],	[1, 225],	[1, 210],	[1, 108],	[1, 151],	[1, 162],	[1, 176],	[1, 103],	[1, 161],	[1, 431],	[1, 682],	[1, 155],	[1, 218],	[1, 140],	[1, 152],	[1, 250],	[1, 682],	[1, 123],	[1, 134],	[1, 140],	[1, 324],	[1, 249],	[1, 322],	[1, 322],	[1, 357],	[1, 282],	[1, 380],	[1, 231],	[1, 231],	[1, 369],	[1, 84],	[1, 118],	[1, 67],	[1, 67],	[1, 369],	[1, 303],	[1, 153],	[1, 428],	[1, 51],	[1, 105],	[1, 428],	[1, 350],	[1, 682],	[1, 150],	[1, 150],	[1, 108],	[1, 108],	[1, 132],	[1, 75],	[1, 428],	[1, 431],	[1, 2851],	[1, 300],	[1, 265],	[1, 270],	[1, 303],	[1, 350],	[1, 350],	[1, 303],	[1, 232],	[1, 334],	[1, 103],	[1, 152],	[1, 211],	[1, 215],	[1, 198],	[1, 167],	[1, 187],	[1, 69],	[1, 265],	[1, 320],	[1, 98],	[1, 226],	[1, 213],	[1, 347],	[1, 347],	[1, 343],	[1, 213],	[1, 199],	[1, 226],	[1, 102],	[1, 226],	[1, 213],	[1, 213],	[1, 346],	[1, 346],	[1, 226],	[1, 169],	[1, 171],	[1, 154],	[1, 166],	[1, 157],	[1, 433],	[1, 508],	[1, 633],	[1, 383],	[1, 651],	[1, 260],	[1, 136],	[1, 217],	[1, 217],	[1, 242],	[1, 242],	[1, 155],	[1, 255],	[1, 254],	[1, 120],	[1, 122],	[1, 103],	[1, 2837],	[1, 81],	[1, 119],	[1, 177],	[1, 177],	[1, 428],	[1, 144],	[1, 184],	[1, 108],	[1, 66],	[1, 93],	[1, 66],	[1, 80],	[1, 124],	[1, 169],	[1, 92],	[1, 71],	[1, 116],	[1, 144],	[1, 144],	[1, 169],	[1, 80],	[1, 140],	[1, 72],	[1, 172],	[1, 431],	[1, 343],	[1, 431],	[1, 651],	[1, 52],	[1, 180],	[1, 324]])
    Isoelectric_point = np.array([[1, 8.517643547],	[1, 6.106917763],	[1, 4.533444023],	[1, 9.989714622],	[1, 7.810425377],	[1, 8.358213234],	[1, 6.140907478],	[1, 5.608610344],	[1, 8.80233593],	[1, 6.224744987],	[1, 9.161489296],	[1, 5.450541115],	[1, 4.675541496],	[1, 5.052440834],	[1, 9.738352394],	[1, 5.131049156],	[1, 4.75909481],	[1, 9.157492256],	[1, 4.342351341],	[1, 4.637459373],	[1, 6.511497688],	[1, 9.057759666],	[1, 10.47277622],	[1, 6.246798515],	[1, 5.107688332],	[1, 6.38207531],	[1, 11.27134609],	[1, 4.050028419],	[1, 5.803454399],	[1, 6.530709267],	[1, 8.884662056],	[1, 4.560215187],	[1, 9.263800621],	[1, 8.015112495],	[1, 4.81815052],	[1, 7.990743446],	[1, 9.656928825],	[1, 4.649395561],	[1, 5.008333778],	[1, 8.937268257],	[1, 4.67366581],	[1, 9.696512413],	[1, 8.720396614],	[1, 7.835890388],	[1, 5.232449913],	[1, 4.953540993],	[1, 10.78087063],	[1, 8.000607109],	[1, 9.691354942],	[1, 9.444763374],	[1, 9.814940834],	[1, 4.847081566],	[1, 4.563057137],	[1, 6.725269127],	[1, 6.072132301],	[1, 5.386938286],	[1, 6.391737938],	[1, 4.177120399],	[1, 5.736668587],	[1, 9.462814522],	[1, 5.894624138],	[1, 4.956553459],	[1, 4.956553459],	[1, 10.3680151],	[1, 6.600564384],	[1, 5.261494637],	[1, 6.574702644],	[1, 5.192094231],	[1, 10.31063824],	[1, 5.851653862],	[1, 4.847081566],	[1, 9.462814522],	[1, 5.120477104],	[1, 5.246943855],	[1, 4.84571743],	[1, 11.00734806],	[1, 6.565835762],	[1, 8.214448738],	[1, 4.556577492],	[1, 9.462814522],	[1, 4.847081566],	[1, 4.643029594],	[1, 5.71626339],	[1, 4.581245613],	[1, 6.134484673],	[1, 5.684376717],	[1, 11.85588093],	[1, 8.50597477],	[1, 9.094764519],	[1, 5.685911369],	[1, 5.448438072],	[1, 5.108086205],	[1, 4.050028419],	[1, 5.103482246],	[1, 9.520965004],	[1, 5.113997459],	[1, 5.145940971],	[1, 5.212328911],	[1, 5.773216057],	[1, 4.419254494],	[1, 9.678332329],	[1, 6.824680519],	[1, 4.941604805],	[1, 6.034334373],	[1, 7.097962379],	[1, 9.363275337],	[1, 5.570755577],	[1, 5.249615288],	[1, 5.849380302],	[1, 8.396185112],	[1, 8.256933403],	[1, 7.612582588],	[1, 6.367922401],	[1, 4.474729347],	[1, 7.120243263],	[1, 9.749312019],	[1, 7.856133461],	[1, 9.509618568],	[1, 4.177916145],	[1, 6.757781029],	[1, 8.85777874],	[1, 4.479105949],	[1, 9.390158653],	[1, 7.865545845],	[1, 6.804502678],	[1, 5.57791729],	[1, 5.44292469],	[1, 5.607871437],	[1, 6.253221321],	[1, 8.130124092],	[1, 8.475481224],	[1, 8.413784981],	[1, 6.459774208],	[1, 9.657444572],	[1, 5.52221508],	[1, 8.792407799],	[1, 8.114071465],	[1, 6.567199898],	[1, 4.925974083],	[1, 5.546087456],	[1, 6.674682426],	[1, 5.466228676],	[1, 5.528581047],	[1, 5.466228676],	[1, 5.466228676],	[1, 5.5210783],	[1, 9.659185219],	[1, 5.411947441],	[1, 5.409617043],	[1, 5.949189568],	[1, 5.411947441],	[1, 5.463273048],	[1, 6.137383461],	[1, 5.883085823],	[1, 8.092539024],	[1, 6.176318169],	[1, 8.48521595],	[1, 5.256208611],	[1, 4.43522625],	[1, 6.064004326],	[1, 10.10911007],	[1, 8.120324898],	[1, 5.975676537],	[1, 5.454349327],	[1, 9.576021004],	[1, 5.149180794],	[1, 9.392092705],	[1, 5.657662392],	[1, 9.602581978],	[1, 8.818904305],	[1, 8.675139809],	[1, 7.104328346],	[1, 7.012419701],	[1, 7.653449821],	[1, 9.359729576],	[1, 5.548929405],	[1, 5.451336861],	[1, 9.523737144],	[1, 9.342194176],	[1, 6.784097481],	[1, 9.453208733],	[1, 8.106077385],	[1, 4.050028419],	[1, 6.679911613],	[1, 5.687957573],	[1, 6.619150734],	[1, 8.397087669],	[1, 10.35718441],	[1, 9.252905464],	[1, 6.435162926],	[1, 5.222048378],	[1, 5.112405968],	[1, 4.050028419],	[1, 5.398988152],	[1, 8.443440437],	[1, 4.734483528],	[1, 8.8900774],	[1, 6.767386818],	[1, 5.538300514],	[1, 5.42155323],	[1, 9.86335659],	[1, 5.86751194],	[1, 9.284301567],	[1, 6.180296898],	[1, 9.864388084],	[1, 6.560038185],	[1, 9.958576393],	[1, 6.108850288],	[1, 5.888997078],	[1, 9.521093941],	[1, 5.000831032],	[1, 5.461397362],	[1, 5.45361042],	[1, 5.466228676],	[1, 6.567199898],	[1, 5.603722191],	[1, 4.349058342],	[1, 4.246805],	[1, 9.558872414],	[1, 5.066252708],	[1, 5.492658806],	[1, 5.492829323],	[1, 9.695996666],	[1, 8.114071465],	[1, 5.42382679],	[1, 6.435049248],	[1, 5.428089714],	[1, 8.324689674],	[1, 8.761720848],	[1, 11.99996777],	[1, 5.692845726],	[1, 5.588489342],	[1, 4.366394234],	[1, 5.920656395],	[1, 5.808513069],	[1, 5.461965752],	[1, 5.397510338],	[1, 5.259675789],	[1, 5.569618797],	[1, 5.177884483],	[1, 6.966436958],	[1, 5.525852776],	[1, 5.525852776],	[1, 7.277516747],	[1, 9.167742729],	[1, 9.744928169],	[1, 5.5210783],	[1, 9.742607307],	[1, 5.476800728],	[1, 5.466228676],	[1, 8.594167519],	[1, 9.788831139],	[1, 6.133291054],	[1, 5.586670494],	[1, 8.431449318],	[1, 5.411947441],	[1, 5.510449409],	[1, 6.076906776],	[1, 5.466228676],	[1, 5.513177681],	[1, 8.125546837],	[1, 5.409617043],	[1, 9.456303215],	[1, 9.037129784],	[1, 5.21068058],	[1, 5.117976189],	[1, 9.6009058],	[1, 5.440423775],	[1, 5.769180489],	[1, 7.772982216],	[1, 7.773380089],	[1, 5.466228676],	[1, 5.466228676],	[1, 5.466228676],	[1, 5.480324745],	[1, 5.629470253],	[1, 9.695803261],	[1, 8.137860298],	[1, 9.602581978],	[1, 8.125546837],	[1, 8.613636971],	[1, 8.137924767],	[1, 5.42382679],	[1, 5.435478783],	[1, 4.632684898],	[1, 9.67549572],	[1, 9.425938606],	[1, 5.607075691],	[1, 8.125611305],	[1, 6.206101799],	[1, 9.240785408],	[1, 5.466228676],	[1, 9.297066307],	[1, 5.461397362],	[1, 5.58576107],	[1, 8.662504005],	[1, 4.637800407],	[1, 9.250391197],	[1, 5.998468971],	[1, 6.291417122],	[1, 6.701226234],	[1, 4.815308571],	[1, 9.164648247],	[1, 4.176779366],	[1, 4.26931324],	[1, 8.740768623],	[1, 5.524886513],	[1, 4.381058693],	[1, 5.358518791],	[1, 9.659185219],	[1, 5.614180565],	[1, 6.447951698],	[1, 6.673488808],	[1, 8.075841713],	[1, 7.260010338],	[1, 8.111428261],	[1, 9.773938942],	[1, 8.114071465],	[1, 8.283816719],	[1, 5.7033041],	[1, 9.096247292],	[1, 5.737862206],	[1, 6.061446571],	[1, 9.575182915],	[1, 9.474741173],	[1, 9.167807198],	[1, 9.558485603],	[1, 8.130124092],	[1, 7.013897514],	[1, 6.804502678],	[1, 9.199332237],	[1, 8.128125572],	[1, 5.366248894],	[1, 4.943480492],	[1, 6.066675758],	[1, 5.42155323],	[1, 4.486722374],	[1, 9.821194267],	[1, 8.408176231],	[1, 6.459774208],	[1, 5.159582329],	[1, 9.633913612],	[1, 8.647096062],	[1, 8.402503014],	[1, 8.125546837],	[1, 6.757781029],	[1, 5.264904976],	[1, 8.426227379],	[1, 9.666856956],	[1, 5.290255165],	[1, 9.581823158],	[1, 5.273203468],	[1, 6.757781029],	[1, 8.74051075],	[1, 5.517895317],	[1, 6.969278908],	[1, 8.408111763],	[1, 5.58462429],	[1, 6.425216103],	[1, 9.80514164],	[1, 8.132960701],	[1, 6.625118828],	[1, 8.038643456],	[1, 6.757781029],	[1, 8.133025169],	[1, 4.853902245],	[1, 9.476933098],	[1, 8.133025169],	[1, 9.689549828],	[1, 9.774196815],	[1, 8.125933647],	[1, 8.401664925],	[1, 7.382612038],	[1, 8.397023201],	[1, 6.142328453],	[1, 6.564528465],	[1, 4.206051445],	[1, 5.73536129],	[1, 5.256492805],	[1, 9.433997154],	[1, 8.413784981],	[1, 9.50317173],	[1, 8.114006996],	[1, 8.396958733],	[1, 9.272568321],	[1, 7.176570702],	[1, 7.16258831],	[1, 9.769812965],	[1, 9.502849388],	[1, 8.128190041],	[1, 5.310376167],	[1, 8.408111763],	[1, 8.12341938],	[1, 9.505105782],	[1, 6.417656517],	[1, 6.899310112],	[1, 5.80282917],	[1, 6.29431591],	[1, 6.295282173],	[1, 8.258545113],	[1, 6.264361763],	[1, 6.792339134],	[1, 6.675250816],	[1, 5.881266975],	[1, 8.658184624],	[1, 5.182829475],	[1, 9.671756554],	[1, 9.600712395],	[1, 5.398192406],	[1, 8.22992115],	[1, 9.819389153],	[1, 5.754800224],	[1, 9.938462257],	[1, 9.266379356],	[1, 6.270273018],	[1, 5.47498188],	[1, 6.757781029],	[1, 5.391371727],	[1, 9.644099617],	[1, 9.740931129],	[1, 8.109429741],	[1, 8.594167519],	[1, 9.019207573],	[1, 8.132960701],	[1, 5.275192833],	[1, 7.015432167],	[1, 8.175703239],	[1, 6.579136086],	[1, 8.114071465],	[1, 9.821387672],	[1, 5.120079231],	[1, 9.293585014],	[1, 8.402567482],	[1, 9.573442268],	[1, 8.397023201],	[1, 6.072359657],	[1, 8.08312664],	[1, 9.436060143],	[1, 5.753777122],	[1, 8.413784981],	[1, 4.731641579],	[1, 7.715688515],	[1, 5.756619072],	[1, 9.369722176],	[1, 4.942798424],	[1, 4.432043266],	[1, 4.414252663],	[1, 9.297066307],	[1, 9.655123711],	[1, 7.636284447],	[1, 5.358746147],	[1, 4.300631523],	[1, 5.055737495],	[1, 4.452505302],	[1, 6.504222298],	[1, 6.525934792],	[1, 10.09956875],	[1, 5.422292137],	[1, 6.145340919],	[1, 9.104950523],	[1, 8.633686638],	[1, 8.028392982],	[1, 8.649416924],	[1, 8.123354912],	[1, 8.130446434],	[1, 9.627982521],	[1, 5.63242588],	[1, 9.40782299],	[1, 4.050028419],	[1, 8.114006996],	[1, 8.396958733],	[1, 4.931089592],	[1, 5.555579567],	[1, 8.402503014],	[1, 8.114071465],	[1, 6.485692787],	[1, 4.481663704],	[1, 5.226709175],	[1, 8.613572502],	[1, 8.413784981],	[1, 8.114071465],	[1, 9.162262917],	[1, 5.398192406],	[1, 6.019215202],	[1, 6.307900429],	[1, 5.803056526],	[1, 8.12341938],	[1, 4.828154182],	[1, 8.114006996],	[1, 4.84401226],	[1, 5.270247841],	[1, 8.397023201],	[1, 9.016499901],	[1, 9.602581978],	[1, 9.564029884],	[1, 5.097798347],	[1, 7.959347343],	[1, 11.28714085],	[1, 6.367922401],	[1, 5.955669212],	[1, 8.123548317],	[1, 6.016373253],	[1, 9.023204613],	[1, 8.116908073],	[1, 5.262801933],	[1, 5.907185555],	[1, 4.050028419],	[1, 8.710081673],	[1, 9.397894859],	[1, 6.741525078],	[1, 9.659185219],	[1, 9.435544395],	[1, 9.832153893],	[1, 5.212215233],	[1, 9.380037117],	[1, 8.665211678],	[1, 8.665211678],	[1, 8.389158058],	[1, 4.89295063],	[1, 4.977640724],	[1, 9.364306831],	[1, 9.161231422],	[1, 9.364306831],	[1, 6.177568626],	[1, 5.555579567],	[1, 8.452594948],	[1, 5.113201714],	[1, 5.337090492],	[1, 6.618696022],	[1, 9.520449257],	[1, 7.172933006],	[1, 9.240785408],	[1, 9.698124123],	[1, 5.601789665],	[1, 5.712398338],	[1, 6.476371193],	[1, 8.397087669],	[1, 5.860634422],	[1, 5.392963219],	[1, 5.436786079],	[1, 8.130124092],	[1, 7.025720024],	[1, 9.853106117],	[1, 6.437834358],	[1, 5.436786079],	[1, 5.905537224],	[1, 9.549202156],	[1, 5.354824257],	[1, 6.074121666],	[1, 8.517192268],	[1, 7.022139168],	[1, 5.946631813],	[1, 6.595051003],	[1, 9.774648094],	[1, 5.816072655],	[1, 5.678920174],	[1, 8.413784981],	[1, 8.727488136],	[1, 8.114071465],	[1, 5.905537224],	[1, 8.114006996],	[1, 8.971758842],	[1, 9.653383064],	[1, 4.905000496],	[1, 4.626716805],	[1, 6.608521843],	[1, 5.258141136],	[1, 9.678396797],	[1, 9.403568077],	[1, 5.356984138],	[1, 4.350365639],	[1, 8.419587135],	[1, 4.299949455],	[1, 9.435995674],	[1, 5.801749229],	[1, 5.592581749],	[1, 6.345471001],	[1, 6.074690056],	[1, 5.50590229],	[1, 6.300625038],	[1, 5.791688728],	[1, 5.998468971],	[1, 5.65777607],	[1, 8.402567482],	[1, 6.475291252],	[1, 6.610568047],	[1, 6.757781029],	[1, 8.114071465],	[1, 4.916140938],	[1, 9.456690025],	[1, 5.472935677],	[1, 8.111428261],	[1, 6.480179405],	[1, 6.513941765],	[1, 5.082849693],	[1, 6.513941765],	[1, 5.614180565],	[1, 8.091636467],	[1, 8.401729393],	[1, 4.84350071],	[1, 10.39850864],	[1, 8.873380089],	[1, 5.803681755],	[1, 6.302614403],	[1, 6.451077843],	[1, 7.662714577],	[1, 6.559469795],	[1, 10.35595951],	[1, 9.324594307],	[1, 8.704279518],	[1, 4.982699394],	[1, 5.06108036],	[1, 9.769941902],	[1, 9.294358635],	[1, 6.394352531],	[1, 5.996706963],	[1, 7.042999077],	[1, 6.417315483],	[1, 8.571087837],	[1, 8.588365364],	[1, 6.417315483],	[1, 9.655123711],	[1, 9.655123711],	[1, 9.761109734],	[1, 6.357464027],	[1, 6.360874367],	[1, 11.0001276],	[1, 6.201838875],	[1, 6.323929024],	[1, 5.436786079],	[1, 6.47597332],	[1, 6.707137489],	[1, 7.685848045],	[1, 9.742607307],	[1, 5.697336006],	[1, 6.200872612],	[1, 5.83431797],	[1, 6.579249763],	[1, 6.579136086],	[1, 8.084480476],	[1, 9.86696682],	[1, 9.225312996],	[1, 5.317424202],	[1, 5.456395531],	[1, 8.897942543],	[1, 8.114006996],	[1, 5.832158089],	[1, 4.959509087],	[1, 5.426157188],	[1, 5.426157188],	[1, 5.555579567],	[1, 6.323929024],	[1, 5.426157188],	[1, 5.692561531],	[1, 6.47597332],	[1, 8.391607857],	[1, 5.472935677],	[1, 5.54301815],	[1, 6.174101448],	[1, 4.356731606],	[1, 8.419587135],	[1, 8.114006996],	[1, 6.594994164],	[1, 6.470459938],	[1, 6.394182014],	[1, 9.434061623],	[1, 9.667888451],	[1, 9.774067879],	[1, 5.555579567],	[1, 6.360874367],	[1, 6.757781029],	[1, 4.949391747],	[1, 5.108143044],	[1, 8.594618797],	[1, 4.92892971],	[1, 4.957576561],	[1, 8.11864872],	[1, 5.191696358],	[1, 5.174474144],	[1, 5.337090492],	[1, 8.402567482],	[1, 5.418142891],	[1, 9.521093941],	[1, 9.440057182],	[1, 5.043005562],	[1, 9.016757774],	[1, 9.341291618],	[1, 6.609885979],	[1, 4.885220528],	[1, 6.579136086],	[1, 8.635943031],	[1, 9.773938942],	[1, 9.654479027],	[1, 5.596958351],	[1, 5.023907661],	[1, 5.051417732],	[1, 9.159426308],	[1, 9.517483711],	[1, 9.637781715],	[1, 8.423261833],	[1, 5.510506248],	[1, 9.77400341],	[1, 5.221138954],	[1, 7.028391457],	[1, 6.360874367],	[1, 8.121227455],	[1, 8.419587135],	[1, 6.513941765],	[1, 8.588429832],	[1, 6.47597332],	[1, 8.034775352],	[1, 8.034775352],	[1, 6.505018044],	[1, 7.727454185],	[1, 5.045620155],	[1, 8.999415779],	[1, 4.38293438],	[1, 8.114200401],	[1, 8.137924767],	[1, 7.016625786],	[1, 7.041919136],	[1, 7.705400658],	[1, 7.437234306],	[1, 7.040839195],	[1, 8.123548317],	[1, 6.812858009],	[1, 8.579017448],	[1, 9.544624901],	[1, 8.594167519],	[1, 8.413784981],	[1, 8.419587135],	[1, 8.408111763],	[1, 6.477621651],	[1, 9.464039421],	[1, 8.269762611],	[1, 5.106949425],	[1, 6.732146645],	[1, 6.303523827],	[1, 5.33100872],	[1, 8.322562218],	[1, 8.637812614],	[1, 7.178787422],	[1, 6.052409172],	[1, 9.468423271],	[1, 9.740286446],	[1, 8.114071465],	[1, 5.150658607],	[1, 5.726323891],	[1, 6.283573341],	[1, 5.778217888],	[1, 8.296968269],	[1, 9.32169323],	[1, 6.78301754],	[1, 7.018217278],	[1, 5.674202538],	[1, 6.580954933],	[1, 9.567704582],	[1, 9.488859749],	[1, 6.448179054],	[1, 6.625346184],	[1, 6.625346184],	[1, 5.95862484],	[1, 6.363034248],	[1, 9.644099617],	[1, 8.397087669],	[1, 9.627982521],	[1, 6.625346184],	[1, 6.595051003],	[1, 6.076508904],	[1, 6.620799065],	[1, 8.960476875],	[1, 8.613508034],	[1, 8.860035133],	[1, 8.123548317],	[1, 9.651449013],	[1, 5.563139153],	[1, 4.749830055],	[1, 9.362243843],	[1, 5.043176079],	[1, 8.635878563],	[1, 8.121356392],	[1, 5.569846153],	[1, 8.635878563],	[1, 8.137860298],	[1, 4.953370476],	[1, 9.708632469],	[1, 7.649073219],	[1, 6.757781029],	[1, 9.602581978],	[1, 7.227327919],	[1, 9.184311104],	[1, 8.658055687],	[1, 9.015790749],	[1, 5.701712608],	[1, 9.550104713],	[1, 4.050028419],	[1, 9.42381115],	[1, 5.914460945],	[1, 7.01753521],	[1, 7.892815971],	[1, 5.039595222],	[1, 4.938308144],	[1, 5.242908287],	[1, 9.268958092],	[1, 8.891946983],	[1, 6.377812386],	[1, 7.024299049],	[1, 9.614573097],	[1, 9.690323448],	[1, 6.041723442],	[1, 8.966536903],	[1, 11.14614849],	[1, 9.512455177],	[1, 10.00247936],	[1, 4.969796944],	[1, 9.407178307],	[1, 4.969910622],	[1, 9.659185219],	[1, 5.907924461],	[1, 9.331556892],	[1, 9.270376396],	[1, 5.36084919],	[1, 8.845271873],	[1, 6.430786324],	[1, 5.246489143],	[1, 5.04533596],	[1, 8.643743706],	[1, 9.060273933],	[1, 5.9203722],	[1, 4.050028419],	[1, 4.750171089],	[1, 5.064945412],	[1, 6.674227715],	[1, 8.966536903],	[1, 9.182570457],	[1, 10.05128193],	[1, 5.993182945],	[1, 11.22151203],	[1, 6.594994164],	[1, 8.582369804],	[1, 8.594554329],	[1, 4.845092201],	[1, 4.750398445],	[1, 9.475450325],	[1, 8.397023201],	[1, 8.730002403],	[1, 8.128125572],	[1, 8.123354912],	[1, 4.996511269],	[1, 8.635878563],	[1, 8.938879967],	[1, 10.10653133],	[1, 8.408111763],	[1, 4.938308144],	[1, 5.010323143],	[1, 8.108720589],	[1, 6.761589241],	[1, 6.37923336],	[1, 8.664373589],	[1, 6.130335426],	[1, 6.139202309],	[1, 6.773127556],	[1, 6.798989296],	[1, 6.153468895],	[1, 5.957999611],	[1, 5.567402077],	[1, 9.247941399],	[1, 6.147728157],	[1, 7.658508492],	[1, 9.602581978],	[1, 9.441088676],	[1, 8.729551125],	[1, 9.65396328],	[1, 6.755791664],	[1, 5.456111336],	[1, 9.659185219],	[1, 11.16948605],	[1, 9.517225838],	[1, 9.884308815],	[1, 5.605256844],	[1, 5.413936806],	[1, 4.929043388],	[1, 5.199369621],	[1, 4.843671227],	[1, 4.942798424],	[1, 4.886357307],	[1, 4.39362011],	[1, 4.39020977],	[1, 4.82661953],	[1, 8.912254524],	[1, 9.695996666],	[1, 6.7762537],	[1, 8.128447914],	[1, 4.95086956],	[1, 4.932681084],	[1, 8.777128792],	[1, 8.114071465],	[1, 5.22926693],	[1, 9.159039497],	[1, 8.114071465],	[1, 5.108143044],	[1, 9.668855476],	[1, 9.019207573],	[1, 9.240785408],	[1, 9.838987541],	[1, 9.838987541],	[1, 4.898805046],	[1, 8.121162987],	[1, 7.635886574],	[1, 8.120776176],	[1, 6.469323158],	[1, 5.087965202],	[1, 4.930691719],	[1, 4.9385355],	[1, 4.918471336],	[1, 4.996227074],	[1, 4.861007118],	[1, 4.984916115],	[1, 6.221959877],	[1, 4.869760323],	[1, 8.35918026],	[1, 8.662504005],	[1, 7.013158607],	[1, 6.405549812],	[1, 9.297582054],	[1, 9.379327965],	[1, 5.864215279],	[1, 9.630948067],	[1, 5.054998589],	[1, 4.92892971],	[1, 11.4542429],	[1, 5.36249752],	[1, 4.570559883],	[1, 4.965420341],	[1, 4.924950981],	[1, 4.875160027],	[1, 4.559248924],	[1, 5.479415321],	[1, 5.260073662],	[1, 9.435995674],	[1, 5.260073662],	[1, 4.615576363],	[1, 4.604094887],	[1, 4.925348854],	[1, 4.965818214],	[1, 5.36249752],	[1, 9.274760246],	[1, 9.418395805],	[1, 9.639264488],	[1, 9.517483711],	[1, 9.851172066],	[1, 8.327526283],	[1, 6.191494179],	[1, 6.710547829],	[1, 6.969278908],	[1, 5.715695],	[1, 5.014188194],	[1, 7.943681526],	[1, 4.393563271],	[1, 4.39020977],	[1, 5.16736927],	[1, 5.298894691],	[1, 8.665211678],	[1, 5.378923988],	[1, 5.039254189],	[1, 4.266073418],	[1, 4.349285698],	[1, 7.149799538],	[1, 6.387531853],	[1, 9.232533455],	[1, 9.559130287],	[1, 4.351104546],	[1, 4.236005592],	[1, 8.111428261],	[1, 9.364306831],	[1, 6.425443459],	[1, 9.225312996],	[1, 9.456690025],	[1, 10.16100712],	[1, 9.697157097],	[1, 9.851429939],	[1, 5.143837929],	[1, 9.274760246],	[1, 9.302739525],	[1, 9.821194267],	[1, 9.511746025],	[1, 9.521803093],	[1, 9.364306831],	[1, 9.419685173],	[1, 9.851429939],	[1, 4.739826393],	[1, 9.820549583],	[1, 8.66592083],	[1, 8.397023201],	[1, 6.7695467],	[1, 8.607125664],	[1, 5.466285515],	[1, 8.101693535],	[1, 6.857703972],	[1, 7.920666313]])
    Molecular_weight = np.array([[1, 5756.543],	[1, 6617.5065],	[1, 9303.2892],	[1, 6304.0708],	[1, 3619.1997],	[1, 9303.6417],	[1, 5601.4576],	[1, 9935.1238],	[1, 8771.223],	[1, 9075.0983],	[1, 9592.1124],	[1, 5485.3145],	[1, 9462.9523],	[1, 3171.5375],	[1, 10741.5689],	[1, 9690.7416],	[1, 10983.2173],	[1, 10851.2081],	[1, 10184.3521],	[1, 11899.3646],	[1, 3786.297],	[1, 37745.0925],	[1, 16519.3971],	[1, 5385.9035],	[1, 137007.3054],	[1, 25005.3906],	[1, 6617.5159],	[1, 11311.8119],	[1, 109011.8849],	[1, 27349.4948],	[1, 5671.4485],	[1, 10422.5119],	[1, 15258.399],	[1, 9696.1139],	[1, 10147.4819],	[1, 13368.4061],	[1, 8231.5865],	[1, 3970.524],	[1, 22738.4468],	[1, 23072.1525],	[1, 24121.1319],	[1, 6761.6776],	[1, 8908.2517],	[1, 8085.2484],	[1, 18828.3362],	[1, 9507.5628],	[1, 3442.8439],	[1, 6600.3633],	[1, 18886.0605],	[1, 29720.6943],	[1, 17359.3685],	[1, 13058.443],	[1, 9873.9115],	[1, 14709.4067],	[1, 13293.5554],	[1, 17422.321],	[1, 6957.7587],	[1, 6140.6524],	[1, 38800.8277],	[1, 52492.8566],	[1, 18352.9214],	[1, 16298.1193],	[1, 16298.1193],	[1, 14603.6958],	[1, 38528.8252],	[1, 201561.9687],	[1, 47424.2633],	[1, 59635.2727],	[1, 15356.4455],	[1, 38811.8537],	[1, 12481.758],	[1, 52372.7047],	[1, 59773.3537],	[1, 196490.4908],	[1, 34155.4414],	[1, 7075.3668],	[1, 13821.5697],	[1, 14115.1835],	[1, 5719.5221],	[1, 52467.7643],	[1, 12343.5909],	[1, 14702.9674],	[1, 43984.0946],	[1, 3604.9812],	[1, 68991.5896],	[1, 77586.2324],	[1, 15999.5644],	[1, 6396.305],	[1, 8790.9269],	[1, 15728.2173],	[1, 24144.533],	[1, 5480.0915],	[1, 7986.1775],	[1, 13006.6858],	[1, 6655.5708],	[1, 16067.2612],	[1, 142829.5458],	[1, 186973.0853],	[1, 77642.3386],	[1, 9919.0454],	[1, 13272.7009],	[1, 8445.7191],	[1, 4676.2488],	[1, 22774.6004],	[1, 18352.6154],	[1, 33681.6776],	[1, 7948.8123],	[1, 34903.0957],	[1, 27395.3219],	[1, 48147.0978],	[1, 41588.8357],	[1, 58610.8042],	[1, 15813.0651],	[1, 15247.097],	[1, 54249.8815],	[1, 40789.6619],	[1, 13090.8188],	[1, 9571.0814],	[1, 11913.3681],	[1, 43870.8268],	[1, 46934.0764],	[1, 6319.1134],	[1, 8220.1198],	[1, 35979.261],	[1, 47875.6627],	[1, 25270.1996],	[1, 25486.3909],	[1, 23806.5032],	[1, 44858.2657],	[1, 49732.9752],	[1, 58943.4657],	[1, 48733.7877],	[1, 43943.8326],	[1, 76898.2891],	[1, 61917.3535],	[1, 20567.0908],	[1, 48288.2226],	[1, 47817.577],	[1, 16694.0395],	[1, 115019.3639],	[1, 47961.7119],	[1, 73454.4814],	[1, 73418.4741],	[1, 73353.3775],	[1, 73424.4554],	[1, 73352.3927],	[1, 76651.0942],	[1, 73450.4265],	[1, 73367.4007],	[1, 16679.9801],	[1, 73652.7004],	[1, 73392.3904],	[1, 15066.2307],	[1, 12578.3885],	[1, 10143.222],	[1, 16189.2809],	[1, 11422.771],	[1, 11201.494],	[1, 10314.1346],	[1, 5838.544],	[1, 15118.8763],	[1, 7357.5149],	[1, 5936.6361],	[1, 10904.144],	[1, 10366.5891],	[1, 7221.9449],	[1, 11491.8794],	[1, 10675.7495],	[1, 76602.0401],	[1, 12811.8367],	[1, 13420.187],	[1, 14420.3314],	[1, 14324.3565],	[1, 39429.9933],	[1, 12249.886],	[1, 10860.9338],	[1, 10102.2108],	[1, 6872.858],	[1, 11733.1726],	[1, 11298.9975],	[1, 11533.9917],	[1, 13082.0819],	[1, 6328.847],	[1, 17992.3492],	[1, 17912.9643],	[1, 15866.7048],	[1, 48245.2838],	[1, 9721.9101],	[1, 11454.8753],	[1, 7906.9269],	[1, 15158.7819],	[1, 32486.1428],	[1, 10615.8626],	[1, 41039.6073],	[1, 6751.5358],	[1, 10948.3752],	[1, 11689.2393],	[1, 5297.9001],	[1, 20547.019],	[1, 108255.4288],	[1, 7470.4539],	[1, 14852.8068],	[1, 15149.7188],	[1, 18934.2047],	[1, 11690.3319],	[1, 12969.5517],	[1, 11387.7553],	[1, 11358.4749],	[1, 9960.2575],	[1, 11219.5084],	[1, 12144.2925],	[1, 4918.4773],	[1, 11603.0181],	[1, 73433.4423],	[1, 47773.4417],	[1, 5335.9592],	[1, 12786.3016],	[1, 15010.6015],	[1, 13376.3263],	[1, 32026.553],	[1, 39584.2436],	[1, 39655.3215],	[1, 13360.3699],	[1, 48323.3311],	[1, 54388.7835],	[1, 21364.1709],	[1, 54519.9134],	[1, 25775.1198],	[1, 48603.8179],	[1, 2461.0237],	[1, 40210.5049],	[1, 73520.5693],	[1, 7880.5954],	[1, 11311.6855],	[1, 60909.2871],	[1, 11739.0236],	[1, 9928.0876],	[1, 10452.5826],	[1, 18499.8902],	[1, 9001.2133],	[1, 43885.8827],	[1, 73489.552],	[1, 73449.4451],	[1, 54252.8913],	[1, 15179.1746],	[1, 5283.1564],	[1, 73362.3677],	[1, 11233.955],	[1, 21936.5501],	[1, 73420.4038],	[1, 48149.1599],	[1, 12593.1315],	[1, 54446.928],	[1, 73394.4758],	[1, 48663.8068],	[1, 73418.3847],	[1, 73445.3703],	[1, 15975.0878],	[1, 73451.4807],	[1, 73399.4277],	[1, 48674.7551],	[1, 73401.4386],	[1, 7559.6338],	[1, 12967.5738],	[1, 9490.6611],	[1, 23474.2166],	[1, 10525.0429],	[1, 18447.8924],	[1, 17807.2298],	[1, 19028.5465],	[1, 18999.4655],	[1, 73412.4017],	[1, 73484.5519],	[1, 73440.4978],	[1, 73489.5088],	[1, 73443.4868],	[1, 23754.0483],	[1, 48775.887],	[1, 76691.2624],	[1, 48640.7404],	[1, 48768.8765],	[1, 48747.8969],	[1, 54450.8513],	[1, 73336.3224],	[1, 13260.8139],	[1, 21189.2803],	[1, 22546.7048],	[1, 31923.4816],	[1, 48623.6688],	[1, 14690.8046],	[1, 16319.7016],	[1, 73408.3931],	[1, 38550.1971],	[1, 42790.5503],	[1, 108410.8401],	[1, 17005.342],	[1, 12335.7873],	[1, 31882.7729],	[1, 49357.2582],	[1, 29394.3761],	[1, 8155.2843],	[1, 9386.4998],	[1, 6106.0291],	[1, 14313.8466],	[1, 16042.7095],	[1, 8497.5669],	[1, 10782.9645],	[1, 6910.7518],	[1, 60628.6942],	[1, 76705.097],	[1, 85643.7056],	[1, 312311.8105],	[1, 60779.7454],	[1, 13094.8283],	[1, 43999.0437],	[1, 48252.23],	[1, 15945.3352],	[1, 48279.2554],	[1, 9187.3808],	[1, 36452.4163],	[1, 21410.2242],	[1, 62600.3239],	[1, 48721.8721],	[1, 76494.7845],	[1, 58755.7949],	[1, 9896.2577],	[1, 58808.8377],	[1, 49793.0272],	[1, 12068.9287],	[1, 47891.6621],	[1, 16242.1748],	[1, 48675.7647],	[1, 62396.6969],	[1, 35906.9843],	[1, 61378.0915],	[1, 108255.4288],	[1, 9482.5052],	[1, 7984.2159],	[1, 48177.127],	[1, 43945.8055],	[1, 15744.8785],	[1, 76667.1598],	[1, 24460.9077],	[1, 48299.2121],	[1, 48644.7291],	[1, 43965.9692],	[1, 62359.6735],	[1, 48236.1946],	[1, 16250.7062],	[1, 29207.4313],	[1, 16206.6272],	[1, 28828.9851],	[1, 44027.0107],	[1, 48365.3977],	[1, 56951.1972],	[1, 44122.1332],	[1, 48749.8698],	[1, 25098.0178],	[1, 312068.3124],	[1, 7856.7747],	[1, 48735.8431],	[1, 41162.5256],	[1, 48731.0584],	[1, 44016.0278],	[1, 48662.7064],	[1, 15697.4242],	[1, 61702.0664],	[1, 48705.8171],	[1, 76750.2286],	[1, 15274.5804],	[1, 48718.8126],	[1, 48310.3158],	[1, 312205.6326],	[1, 48362.3474],	[1, 5565.4391],	[1, 47586.1542],	[1, 9932.9385],	[1, 62572.2707],	[1, 62351.6132],	[1, 21429.2739],	[1, 48374.3877],	[1, 74282.4339],	[1, 48263.256],	[1, 48386.4151],	[1, 18604.0076],	[1, 9394.4827],	[1, 9455.6302],	[1, 77325.8822],	[1, 77306.2808],	[1, 48697.7918],	[1, 61962.3551],	[1, 48342.3626],	[1, 48634.6532],	[1, 11562.3997],	[1, 33087.6228],	[1, 15537.497],	[1, 35030.3544],	[1, 32605.0061],	[1, 32619.0327],	[1, 9187.2911],	[1, 53118.0654],	[1, 53144.6176],	[1, 47938.6323],	[1, 43117.3694],	[1, 27691.2916],	[1, 43224.9334],	[1, 19165.924],	[1, 19102.802],	[1, 19107.3367],	[1, 3891.4143],	[1, 8244.4632],	[1, 10028.5071],	[1, 10640.3289],	[1, 22946.3064],	[1, 46235.7679],	[1, 32978.8459],	[1, 44027.0107],	[1, 21919.5228],	[1, 20880.9475],	[1, 20938.0022],	[1, 48260.2521],	[1, 48149.1599],	[1, 16818.2317],	[1, 48735.8431],	[1, 22870.253],	[1, 12354.2284],	[1, 11026.4077],	[1, 51579.9158],	[1, 48334.2909],	[1, 11688.5185],	[1, 10198.6129],	[1, 16574.7419],	[1, 48257.3408],	[1, 17871.2979],	[1, 48347.3758],	[1, 27613.3277],	[1, 48671.8174],	[1, 11592.259],	[1, 130028.3117],	[1, 48704.8324],	[1, 24654.3919],	[1, 34474.0972],	[1, 167313.894],	[1, 38534.2407],	[1, 30975.3779],	[1, 15703.6301],	[1, 15689.6035],	[1, 38580.2231],	[1, 14894.1186],	[1, 48626.6693],	[1, 40363.5151],	[1, 5239.6715],	[1, 30568.0477],	[1, 8380.1589],	[1, 11904.3797],	[1, 45409.9114],	[1, 5229.9151],	[1, 11257.6781],	[1, 19776.3429],	[1, 43147.5584],	[1, 65025.0533],	[1, 14640.4757],	[1, 59491.9259],	[1, 48305.296],	[1, 48658.7557],	[1, 76650.1061],	[1, 10804.0248],	[1, 15524.3343],	[1, 6226.7947],	[1, 48272.2661],	[1, 48344.3354],	[1, 28668.9376],	[1, 85573.6541],	[1, 48390.4269],	[1, 48271.3211],	[1, 46427.6424],	[1, 26378.0993],	[1, 29950.5004],	[1, 48789.9403],	[1, 48719.8438],	[1, 48228.1706],	[1, 17716.8025],	[1, 19079.2836],	[1, 29967.6098],	[1, 42711.8283],	[1, 29846.5574],	[1, 48663.6514],	[1, 19994.5164],	[1, 48316.3187],	[1, 20008.543],	[1, 34659.8921],	[1, 48288.2688],	[1, 12977.4518],	[1, 76642.1055],	[1, 76717.1601],	[1, 32118.7578],	[1, 10630.0408],	[1, 15668.9209],	[1, 15951.2322],	[1, 16537.8243],	[1, 49711.9511],	[1, 25814.9662],	[1, 17315.777],	[1, 49709.9319],	[1, 25277.3058],	[1, 28246.4677],	[1, 11970.4109],	[1, 25108.1851],	[1, 11271.8868],	[1, 50040.2164],	[1, 76709.1965],	[1, 13221.0856],	[1, 64763.6594],	[1, 36709.9133],	[1, 17657.226],	[1, 17642.1649],	[1, 17645.0828],	[1, 49599.7816],	[1, 29860.1849],	[1, 29845.1093],	[1, 16205.493],	[1, 16534.8419],	[1, 16205.493],	[1, 47773.545],	[1, 85791.9273],	[1, 26766.0868],	[1, 29338.7252],	[1, 22236.8578],	[1, 51498.8034],	[1, 15155.3075],	[1, 20401.032],	[1, 16744.1961],	[1, 3048.5641],	[1, 28579.9863],	[1, 190141.3961],	[1, 55472.8596],	[1, 48084.0022],	[1, 186421.3823],	[1, 89675.9262],	[1, 86323.3477],	[1, 49775.0549],	[1, 27950.4025],	[1, 26579.341],	[1, 86489.7205],	[1, 86368.4296],	[1, 176707.5907],	[1, 19434.1399],	[1, 14747.7028],	[1, 30122.1306],	[1, 16515.5763],	[1, 8559.5627],	[1, 16670.005],	[1, 44029.9683],	[1, 14391.5984],	[1, 177358.2593],	[1, 54236.7406],	[1, 48841.0019],	[1, 48258.3719],	[1, 48283.2456],	[1, 176650.5394],	[1, 48229.2413],	[1, 9963.3216],	[1, 76421.9105],	[1, 29123.2383],	[1, 23993.1266],	[1, 55399.769],	[1, 26093.0929],	[1, 63273.9812],	[1, 23594.3885],	[1, 35089.3074],	[1, 16981.9135],	[1, 48738.8471],	[1, 11741.6109],	[1, 11499.1723],	[1, 186452.3666],	[1, 148332.3265],	[1, 297041.3628],	[1, 42701.5986],	[1, 85017.8108],	[1, 302681.6858],	[1, 193450.1041],	[1, 213201.9092],	[1, 151108.5496],	[1, 48272.3124],	[1, 55400.7538],	[1, 55380.7048],	[1, 43992.0495],	[1, 48289.2933],	[1, 30646.9954],	[1, 7727.8698],	[1, 86302.287],	[1, 48250.2572],	[1, 311985.2503],	[1, 312040.266],	[1, 33189.0651],	[1, 312010.24],	[1, 85613.6135],	[1, 48729.8171],	[1, 48291.3785],	[1, 30627.0684],	[1, 26836.6843],	[1, 20016.6757],	[1, 177339.2129],	[1, 177551.6129],	[1, 229177.6021],	[1, 30015.01],	[1, 307027.3107],	[1, 14680.8369],	[1, 9466.8074],	[1, 23312.1154],	[1, 36153.1864],	[1, 36260.6158],	[1, 7556.6643],	[1, 9631.0345],	[1, 51446.7652],	[1, 51193.2516],	[1, 8258.4677],	[1, 312401.89],	[1, 41037.8251],	[1, 48360.4209],	[1, 312371.8195],	[1, 14726.9104],	[1, 14781.9888],	[1, 76694.3921],	[1, 23715.0893],	[1, 55444.8031],	[1, 2517.9856],	[1, 244047.3391],	[1, 86504.7319],	[1, 86307.3053],	[1, 54865.2022],	[1, 22737.5805],	[1, 48944.6865],	[1, 11140.873],	[1, 183397.8957],	[1, 242049.0532],	[1, 177470.4339],	[1, 51473.7939],	[1, 51461.7402],	[1, 9741.1237],	[1, 8196.4282],	[1, 12020.7389],	[1, 32363.1425],	[1, 20116.9325],	[1, 23985.218],	[1, 48255.1909],	[1, 8818.796],	[1, 9593.7169],	[1, 86406.4345],	[1, 86377.4363],	[1, 85660.7097],	[1, 86561.7832],	[1, 86349.3832],	[1, 173710.0084],	[1, 55501.9238],	[1, 48365.3496],	[1, 86332.3791],	[1, 10583.7794],	[1, 44459.7721],	[1, 7962.225],	[1, 48777.9029],	[1, 48262.2084],	[1, 43957.9023],	[1, 16573.392],	[1, 19225.5085],	[1, 23529.7176],	[1, 20662.7329],	[1, 15852.2136],	[1, 85717.761],	[1, 55444.7634],	[1, 43952.8876],	[1, 38505.0525],	[1, 38363.8451],	[1, 48238.1706],	[1, 34817.8256],	[1, 34764.6159],	[1, 48619.6386],	[1, 27408.6549],	[1, 27343.6027],	[1, 22233.8571],	[1, 48242.2864],	[1, 73432.4543],	[1, 14821.6541],	[1, 16028.9549],	[1, 25228.4693],	[1, 22945.8707],	[1, 21326.1204],	[1, 55281.6135],	[1, 28320.7793],	[1, 51519.8193],	[1, 48730.8666],	[1, 15901.2826],	[1, 15918.2669],	[1, 98264.6853],	[1, 27656.9091],	[1, 41717.5595],	[1, 16631.8743],	[1, 18742.358],	[1, 18841.4924],	[1, 22879.8635],	[1, 34558.7722],	[1, 15949.3718],	[1, 28177.6385],	[1, 4794.3698],	[1, 55472.8165],	[1, 48283.2324],	[1, 48690.8488],	[1, 312056.2654],	[1, 48246.2322],	[1, 55471.8317],	[1, 12662.0418],	[1, 12692.0678],	[1, 45492.0669],	[1, 32944.3158],	[1, 39191.7686],	[1, 18496.0878],	[1, 15411.1528],	[1, 48617.6876],	[1, 48695.7792],	[1, 8539.8184],	[1, 8702.9916],	[1, 36607.4974],	[1, 8299.4767],	[1, 8866.1648],	[1, 49683.898],	[1, 8351.7478],	[1, 11164.7343],	[1, 76555.0465],	[1, 48253.3305],	[1, 48734.8584],	[1, 48689.7351],	[1, 48313.2387],	[1, 55367.663],	[1, 76983.2974],	[1, 35850.147],	[1, 23461.5151],	[1, 43463.6426],	[1, 49946.0703],	[1, 57280.7232],	[1, 31530.7801],	[1, 31593.7963],	[1, 30849.8354],	[1, 16402.7671],	[1, 77227.2438],	[1, 76841.3721],	[1, 48245.3068],	[1, 7107.8423],	[1, 7207.9217],	[1, 15193.4115],	[1, 17494.8651],	[1, 19753.3326],	[1, 42656.0392],	[1, 43973.9515],	[1, 14841.0128],	[1, 17028.6375],	[1, 14717.9151],	[1, 36159.7738],	[1, 19154.0108],	[1, 312042.4706],	[1, 311765.9589],	[1, 311779.9855],	[1, 25021.0912],	[1, 24962.044],	[1, 21071.146],	[1, 48261.2832],	[1, 76660.144],	[1, 311795.9849],	[1, 44013.9689],	[1, 31067.2037],	[1, 48866.204],	[1, 20791.7124],	[1, 48807.9157],	[1, 16007.2153],	[1, 49683.898],	[1, 76549.1349],	[1, 54456.8608],	[1, 2682.0095],	[1, 35162.3688],	[1, 27962.4786],	[1, 48556.588],	[1, 48584.6576],	[1, 39996.4434],	[1, 48621.7028],	[1, 48721.8826],	[1, 28235.3492],	[1, 21356.4887],	[1, 48707.7866],	[1, 44036.0174],	[1, 76622.1159],	[1, 45865.4459],	[1, 7464.5862],	[1, 28359.9909],	[1, 23009.7123],	[1, 33819.5266],	[1, 17475.6271],	[1, 7910.893],	[1, 30362.9166],	[1, 34388.3626],	[1, 8406.356],	[1, 10322.6288],	[1, 37652.9818],	[1, 37738.0582],	[1, 33315.3889],	[1, 32553.2647],	[1, 22274.8359],	[1, 27954.2699],	[1, 27895.2227],	[1, 21087.1454],	[1, 29598.5053],	[1, 43769.1224],	[1, 25974.1729],	[1, 14943.0843],	[1, 12025.7645],	[1, 9749.0808],	[1, 14921.8318],	[1, 20086.5368],	[1, 20522.091],	[1, 76698.1076],	[1, 12069.5222],	[1, 15610.8496],	[1, 15547.7276],	[1, 9104.1004],	[1, 40810.7194],	[1, 34829.9759],	[1, 24932.4145],	[1, 27836.2361],	[1, 19744.9487],	[1, 24046.9296],	[1, 34288.5127],	[1, 9857.9992],	[1, 21879.7415],	[1, 25060.0425],	[1, 37658.3026],	[1, 26145.3268],	[1, 44362.9728],	[1, 25457.2788],	[1, 27641.0987],	[1, 19034.5912],	[1, 43971.9289],	[1, 48176.182],	[1, 48359.35],	[1, 33153.701],	[1, 33920.6723],	[1, 11483.09],	[1, 48422.3994],	[1, 26424.0415],	[1, 48697.7918],	[1, 48303.3462],	[1, 5534.2761],	[1, 48655.719],	[1, 26459.0922],	[1, 27136.7111],	[1, 48334.2975],	[1, 36651.7164],	[1, 36759.1458],	[1, 20634.0528],	[1, 5239.875],	[1, 5320.1405],	[1, 24492.3106],	[1, 23416.0547],	[1, 24158.9599],	[1, 23203.229],	[1, 11868.4684],	[1, 16080.3462],	[1, 17161.526],	[1, 18572.0131],	[1, 12025.5492],	[1, 17046.4386],	[1, 48715.8087],	[1, 76624.1317],	[1, 17578.6651],	[1, 25365.8953],	[1, 15727.0405],	[1, 16544.4963],	[1, 26696.7723],	[1, 76711.1462],	[1, 14315.3924],	[1, 15407.3796],	[1, 15812.1914],	[1, 34867.9775],	[1, 26739.6833],	[1, 35567.7446],	[1, 35456.499],	[1, 39322.8538],	[1, 30946.3797],	[1, 41717.3592],	[1, 25123.5976],	[1, 25091.7078],	[1, 40427.8133],	[1, 9658.6789],	[1, 13376.3693],	[1, 7464.2232],	[1, 7520.3329],	[1, 40461.1029],	[1, 33394.0785],	[1, 17089.4584],	[1, 48273.2939],	[1, 5691.4863],	[1, 11947.6494],	[1, 48249.2294],	[1, 38177.6352],	[1, 76679.1076],	[1, 16789.1507],	[1, 16730.1695],	[1, 12291.9451],	[1, 12291.9451],	[1, 14606.9971],	[1, 8474.373],	[1, 48330.4577],	[1, 48655.7518],	[1, 309534.1838],	[1, 32978.6898],	[1, 29112.4321],	[1, 29731.0709],	[1, 33242.8528],	[1, 38404.8689],	[1, 38371.5793],	[1, 33310.0281],	[1, 25389.5299],	[1, 36301.3418],	[1, 11525.2104],	[1, 16979.3445],	[1, 23568.5782],	[1, 23618.6274],	[1, 21420.2439],	[1, 18658.2384],	[1, 20749.3346],	[1, 7800.9637],	[1, 29123.3754],	[1, 35257.3114],	[1, 11279.9714],	[1, 24964.754],	[1, 23153.3982],	[1, 37963.1538],	[1, 38053.1888],	[1, 37683.7727],	[1, 23153.3982],	[1, 21992.6564],	[1, 24979.7654],	[1, 11510.1982],	[1, 24920.7412],	[1, 23152.4134],	[1, 23152.4134],	[1, 37980.1381],	[1, 37890.1031],	[1, 24905.7298],	[1, 18818.4326],	[1, 18990.6574],	[1, 17287.8133],	[1, 18571.2041],	[1, 17699.3157],	[1, 48767.1],	[1, 58282.0691],	[1, 69817.1284],	[1, 44053.0282],	[1, 73388.4944],	[1, 28688.8646],	[1, 14906.9116],	[1, 23517.659],	[1, 23485.7692],	[1, 26769.9],	[1, 26727.7991],	[1, 17330.7453],	[1, 27952.2469],	[1, 28069.3468],	[1, 12541.0011],	[1, 12583.0411],	[1, 11888.2511],	[1, 312160.5154],	[1, 9075.3736],	[1, 13519.5099],	[1, 19153.7847],	[1, 19235.9464],	[1, 48252.23],	[1, 16219.5196],	[1, 20414.0242],	[1, 12220.9738],	[1, 7515.5812],	[1, 10485.0548],	[1, 7457.5451],	[1, 9012.3762],	[1, 13565.0388],	[1, 18862.4852],	[1, 10588.1188],	[1, 8041.2672],	[1, 12929.712],	[1, 16189.5366],	[1, 16175.467],	[1, 18788.4496],	[1, 9024.4299],	[1, 15445.076],	[1, 8142.3711],	[1, 19187.6516],	[1, 48558.7297],	[1, 39347.8001],	[1, 48690.8489],	[1, 73390.3514],	[1, 5491.9926],	[1, 19832.3657],	[1, 36832.3857]])

    #Set alpha to 0.05
    alpha = 0.05

    #Regress Hydrophobicity on Protein length
    print(f"Hydrophobicity on Protein Length")
    Regression(Protein_length, Hydrophobicity, alpha)
    Coeffiecients_of_Correlation_and_Determination(Protein_length, Hydrophobicity)

    #Regress Hydrophobicity on Isoelectric point
    print(f"\nHydrophobicity on Isoelectric Point")
    Regression(Isoelectric_point, Hydrophobicity, alpha)
    Coeffiecients_of_Correlation_and_Determination(Isoelectric_point, Hydrophobicity)

    #Regress Hydrophobicity on Molecular weight
    print(f"\nHydrophobicity on Molecular Weight")
    Regression(Molecular_weight, Hydrophobicity, alpha)
    Coeffiecients_of_Correlation_and_Determination(Molecular_weight, Hydrophobicity)
    
main()
